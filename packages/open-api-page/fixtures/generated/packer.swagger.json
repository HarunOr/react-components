{
  "swagger": "2.0",
  "info": {
    "title": "HashiCorp Cloud Platform Packer Artifact Registry",
    "description": "API for managing Packer images.",
    "version": "2021-04-30"
  },
  "host": "api.cloud.hashicorp.com",
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/packer/2021-04-30/organizations/{location.organization_id}/projects/{location.project_id}/builds/{build_id}": {
      "get": {
        "summary": "<p>TODO: make it possible to query by iteration.incremental_version, not just ULID</p>",
        "operationId": "BuildService_GetBuild",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "build": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "<p>ULID</p>"
                    },
                    "iteration_id": {
                      "type": "string",
                      "title": "<p>ULID of the iteration</p>"
                    },
                    "component_type": {
                      "type": "string",
                      "title": "<p>builder or post-processor used to build this</p>"
                    },
                    "packer_run_uuid": {
                      "type": "string"
                    },
                    "images": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "<p>ULID for the image</p>"
                          },
                          "image_id": {
                            "type": "string",
                            "description": "<p>ID or URL of the remote cloud image as given by a build.</p>"
                          },
                          "region": {
                            "type": "string",
                            "title": "<p>region as given by <code>packer build</code>. eg. \"ap-east-1\"</p>"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "<p>Timestamp at which this image was created</p>"
                          }
                        },
                        "description": "Represents the actual region:image_id mapping for a single image, in a\nsingle build."
                      }
                    },
                    "cloud_provider": {
                      "type": "string",
                      "title": "<p>aws</p>"
                    },
                    "status": {
                      "title": "<p>complete</p>",
                      "type": "string",
                      "enum": [
                        "UNSET",
                        "RUNNING",
                        "DONE",
                        "CANCELLED",
                        "FAILED"
                      ],
                      "default": "UNSET"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "labels": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "title": "<p>unstructured metadata</p>"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                },
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "<p>A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n<code>path/google.protobuf.Duration</code>). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).</p>\n<p>In practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme <code>http</code>, <code>https</code>, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:</p>\n<ul>\n<li>If no scheme is provided, <code>https</code> is assumed.</li>\n<li>An HTTP GET on the URL must yield a [google.protobuf.Type][]\nvalue in binary format, or produce an error.</li>\n<li>Applications are allowed to cache lookup results based on the\nURL, or have them precompiled into a binary to avoid any\nlookup. Therefore, binary compatibility needs to be preserved\non changes to types. (Use versioned type names to manage\nbreaking changes.)</li>\n</ul>\n<p>Note: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.</p>\n<p>Schemes other than <code>http</code>, <code>https</code> (or the empty scheme) might be\nused with implementation specific semantics.</p>"
                      },
                      "value": {
                        "type": "string",
                        "format": "byte",
                        "description": "<p>Must be a valid serialized protocol buffer of the above specified type.</p>"
                      }
                    },
                    "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "<p>organization_id is the id of the organization.</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "<p>project_id is the projects id.</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "build_id",
            "description": "<p>build ULID</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.region.provider",
            "description": "<p>provider is the named cloud provider (\"aws\", \"gcp\", \"azure\").</p>",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "location.region.region",
            "description": "<p>region is the cloud region (\"us-west1\", \"us-east1\").</p>",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": ["PackerService"]
      },
      "delete": {
        "operationId": "BuildService_DeleteBuild",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                },
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "<p>A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n<code>path/google.protobuf.Duration</code>). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).</p>\n<p>In practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme <code>http</code>, <code>https</code>, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:</p>\n<ul>\n<li>If no scheme is provided, <code>https</code> is assumed.</li>\n<li>An HTTP GET on the URL must yield a [google.protobuf.Type][]\nvalue in binary format, or produce an error.</li>\n<li>Applications are allowed to cache lookup results based on the\nURL, or have them precompiled into a binary to avoid any\nlookup. Therefore, binary compatibility needs to be preserved\non changes to types. (Use versioned type names to manage\nbreaking changes.)</li>\n</ul>\n<p>Note: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.</p>\n<p>Schemes other than <code>http</code>, <code>https</code> (or the empty scheme) might be\nused with implementation specific semantics.</p>"
                      },
                      "value": {
                        "type": "string",
                        "format": "byte",
                        "description": "<p>Must be a valid serialized protocol buffer of the above specified type.</p>"
                      }
                    },
                    "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "<p>organization_id is the id of the organization.</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "<p>project_id is the projects id.</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "build_id",
            "description": "<p>build ULID</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.region.provider",
            "description": "<p>provider is the named cloud provider (\"aws\", \"gcp\", \"azure\").</p>",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "location.region.region",
            "description": "<p>region is the cloud region (\"us-west1\", \"us-east1\").</p>",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": ["PackerService"]
      },
      "patch": {
        "operationId": "BuildService_UpdateBuild",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "build": {
                  "title": "<p>custom build info</p>",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "<p>ULID</p>"
                    },
                    "iteration_id": {
                      "type": "string",
                      "title": "<p>ULID of the iteration</p>"
                    },
                    "component_type": {
                      "type": "string",
                      "title": "<p>builder or post-processor used to build this</p>"
                    },
                    "packer_run_uuid": {
                      "type": "string"
                    },
                    "images": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "<p>ULID for the image</p>"
                          },
                          "image_id": {
                            "type": "string",
                            "description": "<p>ID or URL of the remote cloud image as given by a build.</p>"
                          },
                          "region": {
                            "type": "string",
                            "title": "<p>region as given by <code>packer build</code>. eg. \"ap-east-1\"</p>"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "<p>Timestamp at which this image was created</p>"
                          }
                        },
                        "description": "Represents the actual region:image_id mapping for a single image, in a\nsingle build."
                      }
                    },
                    "cloud_provider": {
                      "type": "string",
                      "title": "<p>aws</p>"
                    },
                    "status": {
                      "title": "<p>complete</p>",
                      "type": "string",
                      "enum": [
                        "UNSET",
                        "RUNNING",
                        "DONE",
                        "CANCELLED",
                        "FAILED"
                      ],
                      "default": "UNSET"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "labels": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "title": "<p>unstructured metadata</p>"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                },
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "<p>A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n<code>path/google.protobuf.Duration</code>). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).</p>\n<p>In practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme <code>http</code>, <code>https</code>, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:</p>\n<ul>\n<li>If no scheme is provided, <code>https</code> is assumed.</li>\n<li>An HTTP GET on the URL must yield a [google.protobuf.Type][]\nvalue in binary format, or produce an error.</li>\n<li>Applications are allowed to cache lookup results based on the\nURL, or have them precompiled into a binary to avoid any\nlookup. Therefore, binary compatibility needs to be preserved\non changes to types. (Use versioned type names to manage\nbreaking changes.)</li>\n</ul>\n<p>Note: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.</p>\n<p>Schemes other than <code>http</code>, <code>https</code> (or the empty scheme) might be\nused with implementation specific semantics.</p>"
                      },
                      "value": {
                        "type": "string",
                        "format": "byte",
                        "description": "<p>Must be a valid serialized protocol buffer of the above specified type.</p>"
                      }
                    },
                    "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "<p>organization_id is the id of the organization.</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "<p>project_id is the projects id.</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "build_id",
            "description": "<p>build ULID</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "location": {
                  "title": "<p>org and project info</p>",
                  "type": "object",
                  "properties": {
                    "organization_id": {
                      "type": "string",
                      "description": "<p>organization_id is the id of the organization.</p>"
                    },
                    "project_id": {
                      "type": "string",
                      "description": "<p>project_id is the projects id.</p>"
                    },
                    "region": {
                      "description": "<p>region is the region that the resource is located in. It is\noptional if the object being referenced is a global object.</p>",
                      "type": "object",
                      "properties": {
                        "provider": {
                          "type": "string",
                          "title": "<p>provider is the named cloud provider (\"aws\", \"gcp\", \"azure\")</p>"
                        },
                        "region": {
                          "type": "string",
                          "title": "<p>region is the cloud region (\"us-west1\", \"us-east1\")</p>"
                        }
                      }
                    }
                  }
                },
                "build_id": {
                  "type": "string",
                  "title": "<p>build ULID</p>"
                },
                "updates": {
                  "title": "<p>custom build info</p>",
                  "type": "object",
                  "properties": {
                    "status": {
                      "title": "<p>Running, Done, Failed</p>",
                      "type": "string",
                      "enum": [
                        "UNSET",
                        "RUNNING",
                        "DONE",
                        "CANCELLED",
                        "FAILED"
                      ],
                      "default": "UNSET"
                    },
                    "cloud_provider": {
                      "type": "string",
                      "description": "<p>aws, gcp, etc.</p>"
                    },
                    "packer_run_uuid": {
                      "type": "string",
                      "description": "<p>Packer build run UUID can change because we may be updating a build that\npreviously failed.</p>"
                    },
                    "images": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "<p>ULID for the image</p>"
                          },
                          "image_id": {
                            "type": "string",
                            "description": "<p>ID or URL of the remote cloud image as given by a build.</p>"
                          },
                          "region": {
                            "type": "string",
                            "title": "<p>region as given by <code>packer build</code>. eg. \"ap-east-1\"</p>"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "<p>Timestamp at which this image was created</p>"
                          }
                        },
                        "description": "Represents the actual region:image_id mapping for a single image, in a\nsingle build."
                      },
                      "description": "<p>The length of this list determines how many\nrows this combination of iteration_id and builder_type have in the\nbuild table.</p>"
                    },
                    "labels": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "<p>Labels to add to the build.</p>"
                    }
                  }
                }
              }
            }
          }
        ],
        "tags": ["PackerService"]
      }
    },
    "/packer/2021-04-30/organizations/{location.organization_id}/projects/{location.project_id}/images": {
      "get": {
        "operationId": "BucketService_ListBuckets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "buckets": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "<p>ULID</p>"
                      },
                      "slug": {
                        "type": "string",
                        "title": "<p>base-ubuntu-18-secure</p>"
                      },
                      "location": {
                        "type": "object",
                        "properties": {
                          "organization_id": {
                            "type": "string",
                            "description": "<p>organization_id is the id of the organization.</p>"
                          },
                          "project_id": {
                            "type": "string",
                            "description": "<p>project_id is the projects id.</p>"
                          },
                          "region": {
                            "description": "<p>region is the region that the resource is located in. It is\noptional if the object being referenced is a global object.</p>",
                            "type": "object",
                            "properties": {
                              "provider": {
                                "type": "string",
                                "title": "<p>provider is the named cloud provider (\"aws\", \"gcp\", \"azure\")</p>"
                              },
                              "region": {
                                "type": "string",
                                "title": "<p>region is the cloud region (\"us-west1\", \"us-east1\")</p>"
                              }
                            }
                          }
                        }
                      },
                      "latest_iteration": {
                        "title": "<p>latest iteration regardless of completion status</p>",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "<p>ULID</p>"
                          },
                          "bucket_slug": {
                            "type": "string",
                            "title": "<p>same bucket_slug as in the Bucket object</p>"
                          },
                          "iteration_ancestor_id": {
                            "type": "string",
                            "title": "<p>what image was used as source</p>"
                          },
                          "incremental_version": {
                            "type": "integer",
                            "format": "int32",
                            "title": "<p>e.g 15</p>"
                          },
                          "complete": {
                            "type": "boolean",
                            "description": "<p>If true, this iteration is considered \"ready to use\" and will be\nreturned even if the include_incomplete flage is \"false\" in the\nlist iterations request.</p>"
                          },
                          "author_id": {
                            "type": "string",
                            "title": "<p>who created the iteration</p>"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "<p>when iteration was created or updated</p>"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "fingerprint": {
                            "type": "string",
                            "description": "<p>fingerprint of the build; this will allow to regroup image builds under\nthe same iteration. So it could be for example a git sha.</p>"
                          },
                          "builds": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "title": "<p>ULID</p>"
                                },
                                "iteration_id": {
                                  "type": "string",
                                  "title": "<p>ULID of the iteration</p>"
                                },
                                "component_type": {
                                  "type": "string",
                                  "title": "<p>builder or post-processor used to build this</p>"
                                },
                                "packer_run_uuid": {
                                  "type": "string"
                                },
                                "images": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "title": "<p>ULID for the image</p>"
                                      },
                                      "image_id": {
                                        "type": "string",
                                        "description": "<p>ID or URL of the remote cloud image as given by a build.</p>"
                                      },
                                      "region": {
                                        "type": "string",
                                        "title": "<p>region as given by <code>packer build</code>. eg. \"ap-east-1\"</p>"
                                      },
                                      "created_at": {
                                        "type": "string",
                                        "format": "date-time",
                                        "title": "<p>Timestamp at which this image was created</p>"
                                      }
                                    },
                                    "description": "Represents the actual region:image_id mapping for a single image, in a\nsingle build."
                                  }
                                },
                                "cloud_provider": {
                                  "type": "string",
                                  "title": "<p>aws</p>"
                                },
                                "status": {
                                  "title": "<p>complete</p>",
                                  "type": "string",
                                  "enum": [
                                    "UNSET",
                                    "RUNNING",
                                    "DONE",
                                    "CANCELLED",
                                    "FAILED"
                                  ],
                                  "default": "UNSET"
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "updated_at": {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "labels": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "title": "<p>unstructured metadata</p>"
                                }
                              }
                            },
                            "title": "<p>link to set of builds for an image iteration</p>"
                          }
                        }
                      },
                      "latest_version": {
                        "type": "integer",
                        "format": "int32",
                        "title": "<p>latest completed version</p>"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "platforms": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "title": "<p>[\"aws\", \"gcp\"]</p>"
                      },
                      "description": {
                        "type": "string",
                        "title": "<p>\"This image is a hardened platform for other teams\"</p>"
                      },
                      "labels": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "title": "<p>Slot for unstructured metadata tags\nfor example {\"repo\": \"https://github.com/hashicorp/common\"}</p>"
                      },
                      "iteration_count": {
                        "type": "string",
                        "format": "int64",
                        "description": "<p>number of total iterations (not just versions), for UI.</p>"
                      }
                    }
                  }
                },
                "pagination": {
                  "description": "<p>pagination contains the pagination tokens for a subsequent request.</p>",
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "<p>This token allows you to get the next page of results for list requests.\nIf the number of results is larger than <code>page_size</code>, use the\n<code>next_page_token</code> as a value for the query parameter <code>next_page_token</code> in\nthe next request. The value will become empty when there are no more pages.</p>"
                    },
                    "previous_page_token": {
                      "type": "string",
                      "description": "<p>This token allows you to get the previous page of results for list\nrequests. If the number of results is larger than <code>page_size</code>, use the\n<code>previous_page_token</code> as a value for the query parameter\n<code>previous_page_token</code> in the next request. The value will become empty when\nthere are no more pages.</p>"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                },
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "<p>A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n<code>path/google.protobuf.Duration</code>). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).</p>\n<p>In practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme <code>http</code>, <code>https</code>, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:</p>\n<ul>\n<li>If no scheme is provided, <code>https</code> is assumed.</li>\n<li>An HTTP GET on the URL must yield a [google.protobuf.Type][]\nvalue in binary format, or produce an error.</li>\n<li>Applications are allowed to cache lookup results based on the\nURL, or have them precompiled into a binary to avoid any\nlookup. Therefore, binary compatibility needs to be preserved\non changes to types. (Use versioned type names to manage\nbreaking changes.)</li>\n</ul>\n<p>Note: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.</p>\n<p>Schemes other than <code>http</code>, <code>https</code> (or the empty scheme) might be\nused with implementation specific semantics.</p>"
                      },
                      "value": {
                        "type": "string",
                        "format": "byte",
                        "description": "<p>Must be a valid serialized protocol buffer of the above specified type.</p>"
                      }
                    },
                    "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "<p>organization_id is the id of the organization.</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "<p>project_id is the projects id.</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.region.provider",
            "description": "<p>provider is the named cloud provider (\"aws\", \"gcp\", \"azure\").</p>",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "location.region.region",
            "description": "<p>region is the cloud region (\"us-west1\", \"us-east1\").</p>",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.page_size",
            "description": "<p>The max number of results per page that should be returned. If the number\nof available results is larger than <code>page_size</code>, a <code>next_page_token</code> is\nreturned which can be used to get the next page of results in subsequent\nrequests. A value of zero will cause <code>page_size</code> to be defaulted.</p>",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "pagination.next_page_token",
            "description": "<p>Specifies a page token to use to retrieve the next page. Set this to the\n<code>next_page_token</code> returned by previous list requests to get the next page of\nresults. If set, <code>previous_page_token</code> must not be set.</p>",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.previous_page_token",
            "description": "<p>Specifies a page token to use to retrieve the previous page. Set this to\nthe <code>previous_page_token</code> returned by previous list requests to get the\nprevious page of results. If set, <code>next_page_token</code> must not be set.</p>",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sorting.order_by",
            "description": "<p>Specifies the list of per field ordering that should be used for sorting.\nThe order matters as rows are sorted in order by fields and when the field\nmatches, the next field is used to tie break the ordering.\nThe per field default ordering is ascending.</p>\n<p>The fields should be immutabile, unique, and orderable. If the field is\nnot unique, more than one sort fields should be passed.</p>\n<p>Example: oder_by=name,age desc,created_at asc\nIn that case, 'name' will get the default 'ascending' order.</p>",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": ["PackerService"]
      },
      "put": {
        "summary": "<h2>Operations realted to images</h2>",
        "operationId": "BucketService_CreateBucket",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "bucket": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "<p>ULID</p>"
                    },
                    "slug": {
                      "type": "string",
                      "title": "<p>base-ubuntu-18-secure</p>"
                    },
                    "location": {
                      "type": "object",
                      "properties": {
                        "organization_id": {
                          "type": "string",
                          "description": "<p>organization_id is the id of the organization.</p>"
                        },
                        "project_id": {
                          "type": "string",
                          "description": "<p>project_id is the projects id.</p>"
                        },
                        "region": {
                          "description": "<p>region is the region that the resource is located in. It is\noptional if the object being referenced is a global object.</p>",
                          "type": "object",
                          "properties": {
                            "provider": {
                              "type": "string",
                              "title": "<p>provider is the named cloud provider (\"aws\", \"gcp\", \"azure\")</p>"
                            },
                            "region": {
                              "type": "string",
                              "title": "<p>region is the cloud region (\"us-west1\", \"us-east1\")</p>"
                            }
                          }
                        }
                      }
                    },
                    "latest_iteration": {
                      "title": "<p>latest iteration regardless of completion status</p>",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "title": "<p>ULID</p>"
                        },
                        "bucket_slug": {
                          "type": "string",
                          "title": "<p>same bucket_slug as in the Bucket object</p>"
                        },
                        "iteration_ancestor_id": {
                          "type": "string",
                          "title": "<p>what image was used as source</p>"
                        },
                        "incremental_version": {
                          "type": "integer",
                          "format": "int32",
                          "title": "<p>e.g 15</p>"
                        },
                        "complete": {
                          "type": "boolean",
                          "description": "<p>If true, this iteration is considered \"ready to use\" and will be\nreturned even if the include_incomplete flage is \"false\" in the\nlist iterations request.</p>"
                        },
                        "author_id": {
                          "type": "string",
                          "title": "<p>who created the iteration</p>"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "<p>when iteration was created or updated</p>"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "fingerprint": {
                          "type": "string",
                          "description": "<p>fingerprint of the build; this will allow to regroup image builds under\nthe same iteration. So it could be for example a git sha.</p>"
                        },
                        "builds": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "title": "<p>ULID</p>"
                              },
                              "iteration_id": {
                                "type": "string",
                                "title": "<p>ULID of the iteration</p>"
                              },
                              "component_type": {
                                "type": "string",
                                "title": "<p>builder or post-processor used to build this</p>"
                              },
                              "packer_run_uuid": {
                                "type": "string"
                              },
                              "images": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "title": "<p>ULID for the image</p>"
                                    },
                                    "image_id": {
                                      "type": "string",
                                      "description": "<p>ID or URL of the remote cloud image as given by a build.</p>"
                                    },
                                    "region": {
                                      "type": "string",
                                      "title": "<p>region as given by <code>packer build</code>. eg. \"ap-east-1\"</p>"
                                    },
                                    "created_at": {
                                      "type": "string",
                                      "format": "date-time",
                                      "title": "<p>Timestamp at which this image was created</p>"
                                    }
                                  },
                                  "description": "Represents the actual region:image_id mapping for a single image, in a\nsingle build."
                                }
                              },
                              "cloud_provider": {
                                "type": "string",
                                "title": "<p>aws</p>"
                              },
                              "status": {
                                "title": "<p>complete</p>",
                                "type": "string",
                                "enum": [
                                  "UNSET",
                                  "RUNNING",
                                  "DONE",
                                  "CANCELLED",
                                  "FAILED"
                                ],
                                "default": "UNSET"
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "updated_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "labels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                },
                                "title": "<p>unstructured metadata</p>"
                              }
                            }
                          },
                          "title": "<p>link to set of builds for an image iteration</p>"
                        }
                      }
                    },
                    "latest_version": {
                      "type": "integer",
                      "format": "int32",
                      "title": "<p>latest completed version</p>"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "platforms": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "title": "<p>[\"aws\", \"gcp\"]</p>"
                    },
                    "description": {
                      "type": "string",
                      "title": "<p>\"This image is a hardened platform for other teams\"</p>"
                    },
                    "labels": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "title": "<p>Slot for unstructured metadata tags\nfor example {\"repo\": \"https://github.com/hashicorp/common\"}</p>"
                    },
                    "iteration_count": {
                      "type": "string",
                      "format": "int64",
                      "description": "<p>number of total iterations (not just versions), for UI.</p>"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                },
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "<p>A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n<code>path/google.protobuf.Duration</code>). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).</p>\n<p>In practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme <code>http</code>, <code>https</code>, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:</p>\n<ul>\n<li>If no scheme is provided, <code>https</code> is assumed.</li>\n<li>An HTTP GET on the URL must yield a [google.protobuf.Type][]\nvalue in binary format, or produce an error.</li>\n<li>Applications are allowed to cache lookup results based on the\nURL, or have them precompiled into a binary to avoid any\nlookup. Therefore, binary compatibility needs to be preserved\non changes to types. (Use versioned type names to manage\nbreaking changes.)</li>\n</ul>\n<p>Note: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.</p>\n<p>Schemes other than <code>http</code>, <code>https</code> (or the empty scheme) might be\nused with implementation specific semantics.</p>"
                      },
                      "value": {
                        "type": "string",
                        "format": "byte",
                        "description": "<p>Must be a valid serialized protocol buffer of the above specified type.</p>"
                      }
                    },
                    "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "<p>organization_id is the id of the organization.</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "<p>project_id is the projects id.</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "bucket_slug": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "labels": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "location": {
                  "type": "object",
                  "properties": {
                    "organization_id": {
                      "type": "string",
                      "description": "<p>organization_id is the id of the organization.</p>"
                    },
                    "project_id": {
                      "type": "string",
                      "description": "<p>project_id is the projects id.</p>"
                    },
                    "region": {
                      "description": "<p>region is the region that the resource is located in. It is\noptional if the object being referenced is a global object.</p>",
                      "type": "object",
                      "properties": {
                        "provider": {
                          "type": "string",
                          "title": "<p>provider is the named cloud provider (\"aws\", \"gcp\", \"azure\")</p>"
                        },
                        "region": {
                          "type": "string",
                          "title": "<p>region is the cloud region (\"us-west1\", \"us-east1\")</p>"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "tags": ["PackerService"]
      }
    },
    "/packer/2021-04-30/organizations/{location.organization_id}/projects/{location.project_id}/images/{bucket_slug}": {
      "get": {
        "operationId": "BucketService_GetBucket",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "bucket": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "<p>ULID</p>"
                    },
                    "slug": {
                      "type": "string",
                      "title": "<p>base-ubuntu-18-secure</p>"
                    },
                    "location": {
                      "type": "object",
                      "properties": {
                        "organization_id": {
                          "type": "string",
                          "description": "<p>organization_id is the id of the organization.</p>"
                        },
                        "project_id": {
                          "type": "string",
                          "description": "<p>project_id is the projects id.</p>"
                        },
                        "region": {
                          "description": "<p>region is the region that the resource is located in. It is\noptional if the object being referenced is a global object.</p>",
                          "type": "object",
                          "properties": {
                            "provider": {
                              "type": "string",
                              "title": "<p>provider is the named cloud provider (\"aws\", \"gcp\", \"azure\")</p>"
                            },
                            "region": {
                              "type": "string",
                              "title": "<p>region is the cloud region (\"us-west1\", \"us-east1\")</p>"
                            }
                          }
                        }
                      }
                    },
                    "latest_iteration": {
                      "title": "<p>latest iteration regardless of completion status</p>",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "title": "<p>ULID</p>"
                        },
                        "bucket_slug": {
                          "type": "string",
                          "title": "<p>same bucket_slug as in the Bucket object</p>"
                        },
                        "iteration_ancestor_id": {
                          "type": "string",
                          "title": "<p>what image was used as source</p>"
                        },
                        "incremental_version": {
                          "type": "integer",
                          "format": "int32",
                          "title": "<p>e.g 15</p>"
                        },
                        "complete": {
                          "type": "boolean",
                          "description": "<p>If true, this iteration is considered \"ready to use\" and will be\nreturned even if the include_incomplete flage is \"false\" in the\nlist iterations request.</p>"
                        },
                        "author_id": {
                          "type": "string",
                          "title": "<p>who created the iteration</p>"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "<p>when iteration was created or updated</p>"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "fingerprint": {
                          "type": "string",
                          "description": "<p>fingerprint of the build; this will allow to regroup image builds under\nthe same iteration. So it could be for example a git sha.</p>"
                        },
                        "builds": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "title": "<p>ULID</p>"
                              },
                              "iteration_id": {
                                "type": "string",
                                "title": "<p>ULID of the iteration</p>"
                              },
                              "component_type": {
                                "type": "string",
                                "title": "<p>builder or post-processor used to build this</p>"
                              },
                              "packer_run_uuid": {
                                "type": "string"
                              },
                              "images": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "title": "<p>ULID for the image</p>"
                                    },
                                    "image_id": {
                                      "type": "string",
                                      "description": "<p>ID or URL of the remote cloud image as given by a build.</p>"
                                    },
                                    "region": {
                                      "type": "string",
                                      "title": "<p>region as given by <code>packer build</code>. eg. \"ap-east-1\"</p>"
                                    },
                                    "created_at": {
                                      "type": "string",
                                      "format": "date-time",
                                      "title": "<p>Timestamp at which this image was created</p>"
                                    }
                                  },
                                  "description": "Represents the actual region:image_id mapping for a single image, in a\nsingle build."
                                }
                              },
                              "cloud_provider": {
                                "type": "string",
                                "title": "<p>aws</p>"
                              },
                              "status": {
                                "title": "<p>complete</p>",
                                "type": "string",
                                "enum": [
                                  "UNSET",
                                  "RUNNING",
                                  "DONE",
                                  "CANCELLED",
                                  "FAILED"
                                ],
                                "default": "UNSET"
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "updated_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "labels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                },
                                "title": "<p>unstructured metadata</p>"
                              }
                            }
                          },
                          "title": "<p>link to set of builds for an image iteration</p>"
                        }
                      }
                    },
                    "latest_version": {
                      "type": "integer",
                      "format": "int32",
                      "title": "<p>latest completed version</p>"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "platforms": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "title": "<p>[\"aws\", \"gcp\"]</p>"
                    },
                    "description": {
                      "type": "string",
                      "title": "<p>\"This image is a hardened platform for other teams\"</p>"
                    },
                    "labels": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "title": "<p>Slot for unstructured metadata tags\nfor example {\"repo\": \"https://github.com/hashicorp/common\"}</p>"
                    },
                    "iteration_count": {
                      "type": "string",
                      "format": "int64",
                      "description": "<p>number of total iterations (not just versions), for UI.</p>"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                },
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "<p>A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n<code>path/google.protobuf.Duration</code>). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).</p>\n<p>In practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme <code>http</code>, <code>https</code>, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:</p>\n<ul>\n<li>If no scheme is provided, <code>https</code> is assumed.</li>\n<li>An HTTP GET on the URL must yield a [google.protobuf.Type][]\nvalue in binary format, or produce an error.</li>\n<li>Applications are allowed to cache lookup results based on the\nURL, or have them precompiled into a binary to avoid any\nlookup. Therefore, binary compatibility needs to be preserved\non changes to types. (Use versioned type names to manage\nbreaking changes.)</li>\n</ul>\n<p>Note: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.</p>\n<p>Schemes other than <code>http</code>, <code>https</code> (or the empty scheme) might be\nused with implementation specific semantics.</p>"
                      },
                      "value": {
                        "type": "string",
                        "format": "byte",
                        "description": "<p>Must be a valid serialized protocol buffer of the above specified type.</p>"
                      }
                    },
                    "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "<p>organization_id is the id of the organization.</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "<p>project_id is the projects id.</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket_slug",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.region.provider",
            "description": "<p>provider is the named cloud provider (\"aws\", \"gcp\", \"azure\").</p>",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "location.region.region",
            "description": "<p>region is the cloud region (\"us-west1\", \"us-east1\").</p>",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bucket_id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": ["PackerService"]
      },
      "delete": {
        "operationId": "BucketService_DeleteBucket",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                },
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "<p>A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n<code>path/google.protobuf.Duration</code>). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).</p>\n<p>In practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme <code>http</code>, <code>https</code>, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:</p>\n<ul>\n<li>If no scheme is provided, <code>https</code> is assumed.</li>\n<li>An HTTP GET on the URL must yield a [google.protobuf.Type][]\nvalue in binary format, or produce an error.</li>\n<li>Applications are allowed to cache lookup results based on the\nURL, or have them precompiled into a binary to avoid any\nlookup. Therefore, binary compatibility needs to be preserved\non changes to types. (Use versioned type names to manage\nbreaking changes.)</li>\n</ul>\n<p>Note: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.</p>\n<p>Schemes other than <code>http</code>, <code>https</code> (or the empty scheme) might be\nused with implementation specific semantics.</p>"
                      },
                      "value": {
                        "type": "string",
                        "format": "byte",
                        "description": "<p>Must be a valid serialized protocol buffer of the above specified type.</p>"
                      }
                    },
                    "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "<p>organization_id is the id of the organization.</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "<p>project_id is the projects id.</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket_slug",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.region.provider",
            "description": "<p>provider is the named cloud provider (\"aws\", \"gcp\", \"azure\").</p>",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "location.region.region",
            "description": "<p>region is the cloud region (\"us-west1\", \"us-east1\").</p>",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": ["PackerService"]
      },
      "patch": {
        "operationId": "BucketService_UpdateBucket",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "bucket": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "<p>ULID</p>"
                    },
                    "slug": {
                      "type": "string",
                      "title": "<p>base-ubuntu-18-secure</p>"
                    },
                    "location": {
                      "type": "object",
                      "properties": {
                        "organization_id": {
                          "type": "string",
                          "description": "<p>organization_id is the id of the organization.</p>"
                        },
                        "project_id": {
                          "type": "string",
                          "description": "<p>project_id is the projects id.</p>"
                        },
                        "region": {
                          "description": "<p>region is the region that the resource is located in. It is\noptional if the object being referenced is a global object.</p>",
                          "type": "object",
                          "properties": {
                            "provider": {
                              "type": "string",
                              "title": "<p>provider is the named cloud provider (\"aws\", \"gcp\", \"azure\")</p>"
                            },
                            "region": {
                              "type": "string",
                              "title": "<p>region is the cloud region (\"us-west1\", \"us-east1\")</p>"
                            }
                          }
                        }
                      }
                    },
                    "latest_iteration": {
                      "title": "<p>latest iteration regardless of completion status</p>",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "title": "<p>ULID</p>"
                        },
                        "bucket_slug": {
                          "type": "string",
                          "title": "<p>same bucket_slug as in the Bucket object</p>"
                        },
                        "iteration_ancestor_id": {
                          "type": "string",
                          "title": "<p>what image was used as source</p>"
                        },
                        "incremental_version": {
                          "type": "integer",
                          "format": "int32",
                          "title": "<p>e.g 15</p>"
                        },
                        "complete": {
                          "type": "boolean",
                          "description": "<p>If true, this iteration is considered \"ready to use\" and will be\nreturned even if the include_incomplete flage is \"false\" in the\nlist iterations request.</p>"
                        },
                        "author_id": {
                          "type": "string",
                          "title": "<p>who created the iteration</p>"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "<p>when iteration was created or updated</p>"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "fingerprint": {
                          "type": "string",
                          "description": "<p>fingerprint of the build; this will allow to regroup image builds under\nthe same iteration. So it could be for example a git sha.</p>"
                        },
                        "builds": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "title": "<p>ULID</p>"
                              },
                              "iteration_id": {
                                "type": "string",
                                "title": "<p>ULID of the iteration</p>"
                              },
                              "component_type": {
                                "type": "string",
                                "title": "<p>builder or post-processor used to build this</p>"
                              },
                              "packer_run_uuid": {
                                "type": "string"
                              },
                              "images": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "title": "<p>ULID for the image</p>"
                                    },
                                    "image_id": {
                                      "type": "string",
                                      "description": "<p>ID or URL of the remote cloud image as given by a build.</p>"
                                    },
                                    "region": {
                                      "type": "string",
                                      "title": "<p>region as given by <code>packer build</code>. eg. \"ap-east-1\"</p>"
                                    },
                                    "created_at": {
                                      "type": "string",
                                      "format": "date-time",
                                      "title": "<p>Timestamp at which this image was created</p>"
                                    }
                                  },
                                  "description": "Represents the actual region:image_id mapping for a single image, in a\nsingle build."
                                }
                              },
                              "cloud_provider": {
                                "type": "string",
                                "title": "<p>aws</p>"
                              },
                              "status": {
                                "title": "<p>complete</p>",
                                "type": "string",
                                "enum": [
                                  "UNSET",
                                  "RUNNING",
                                  "DONE",
                                  "CANCELLED",
                                  "FAILED"
                                ],
                                "default": "UNSET"
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "updated_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "labels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                },
                                "title": "<p>unstructured metadata</p>"
                              }
                            }
                          },
                          "title": "<p>link to set of builds for an image iteration</p>"
                        }
                      }
                    },
                    "latest_version": {
                      "type": "integer",
                      "format": "int32",
                      "title": "<p>latest completed version</p>"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "platforms": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "title": "<p>[\"aws\", \"gcp\"]</p>"
                    },
                    "description": {
                      "type": "string",
                      "title": "<p>\"This image is a hardened platform for other teams\"</p>"
                    },
                    "labels": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "title": "<p>Slot for unstructured metadata tags\nfor example {\"repo\": \"https://github.com/hashicorp/common\"}</p>"
                    },
                    "iteration_count": {
                      "type": "string",
                      "format": "int64",
                      "description": "<p>number of total iterations (not just versions), for UI.</p>"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                },
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "<p>A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n<code>path/google.protobuf.Duration</code>). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).</p>\n<p>In practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme <code>http</code>, <code>https</code>, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:</p>\n<ul>\n<li>If no scheme is provided, <code>https</code> is assumed.</li>\n<li>An HTTP GET on the URL must yield a [google.protobuf.Type][]\nvalue in binary format, or produce an error.</li>\n<li>Applications are allowed to cache lookup results based on the\nURL, or have them precompiled into a binary to avoid any\nlookup. Therefore, binary compatibility needs to be preserved\non changes to types. (Use versioned type names to manage\nbreaking changes.)</li>\n</ul>\n<p>Note: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.</p>\n<p>Schemes other than <code>http</code>, <code>https</code> (or the empty scheme) might be\nused with implementation specific semantics.</p>"
                      },
                      "value": {
                        "type": "string",
                        "format": "byte",
                        "description": "<p>Must be a valid serialized protocol buffer of the above specified type.</p>"
                      }
                    },
                    "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "<p>organization_id is the id of the organization.</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "<p>project_id is the projects id.</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket_slug",
            "description": "<p>base-ubuntu-18-secure</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "location": {
                  "type": "object",
                  "properties": {
                    "organization_id": {
                      "type": "string",
                      "description": "<p>organization_id is the id of the organization.</p>"
                    },
                    "project_id": {
                      "type": "string",
                      "description": "<p>project_id is the projects id.</p>"
                    },
                    "region": {
                      "description": "<p>region is the region that the resource is located in. It is\noptional if the object being referenced is a global object.</p>",
                      "type": "object",
                      "properties": {
                        "provider": {
                          "type": "string",
                          "title": "<p>provider is the named cloud provider (\"aws\", \"gcp\", \"azure\")</p>"
                        },
                        "region": {
                          "type": "string",
                          "title": "<p>region is the cloud region (\"us-west1\", \"us-east1\")</p>"
                        }
                      }
                    }
                  }
                },
                "bucket_slug": {
                  "type": "string",
                  "title": "<p>base-ubuntu-18-secure</p>"
                },
                "platforms": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "title": "<p>[\"aws\", \"gcp\"]</p>"
                },
                "description": {
                  "type": "string",
                  "title": "<p>\"This image is a hardened platform for other teams\"</p>"
                },
                "labels": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "<p>Slot for unstructured metadata tags\nfor example {\"repo\": \"https://github.com/hashicorp/common\"}</p>"
                }
              }
            }
          }
        ],
        "tags": ["PackerService"]
      }
    },
    "/packer/2021-04-30/organizations/{location.organization_id}/projects/{location.project_id}/images/{bucket_slug}/channels": {
      "get": {
        "operationId": "ChannelService_ListChannels",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "channels": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "<p>ULID of this chanel</p>"
                      },
                      "slug": {
                        "type": "string",
                        "title": "<p>Something like \"production-stable\"</p>"
                      },
                      "bucket_slug": {
                        "type": "string",
                        "title": "<p>image bucket this belongs to</p>"
                      },
                      "author_id": {
                        "type": "string",
                        "title": "<p>The author who created the channel</p>"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "<p>timestamp this channel was created at</p>"
                      },
                      "revoked_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "<p>timestamp this channel was revoked at</p>"
                      },
                      "revocation_message": {
                        "type": "string",
                        "title": "<p>message with the reason of why this channel was revoked</p>"
                      },
                      "pointer": {
                        "title": "<p>The channel pointer to the iteration</p>",
                        "type": "object",
                        "properties": {
                          "iteration": {
                            "title": "<p>The iteration the channel is pointing to</p>",
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "title": "<p>ULID</p>"
                              },
                              "bucket_slug": {
                                "type": "string",
                                "title": "<p>same bucket_slug as in the Bucket object</p>"
                              },
                              "iteration_ancestor_id": {
                                "type": "string",
                                "title": "<p>what image was used as source</p>"
                              },
                              "incremental_version": {
                                "type": "integer",
                                "format": "int32",
                                "title": "<p>e.g 15</p>"
                              },
                              "complete": {
                                "type": "boolean",
                                "description": "<p>If true, this iteration is considered \"ready to use\" and will be\nreturned even if the include_incomplete flage is \"false\" in the\nlist iterations request.</p>"
                              },
                              "author_id": {
                                "type": "string",
                                "title": "<p>who created the iteration</p>"
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "title": "<p>when iteration was created or updated</p>"
                              },
                              "updated_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "fingerprint": {
                                "type": "string",
                                "description": "<p>fingerprint of the build; this will allow to regroup image builds under\nthe same iteration. So it could be for example a git sha.</p>"
                              },
                              "builds": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "title": "<p>ULID</p>"
                                    },
                                    "iteration_id": {
                                      "type": "string",
                                      "title": "<p>ULID of the iteration</p>"
                                    },
                                    "component_type": {
                                      "type": "string",
                                      "title": "<p>builder or post-processor used to build this</p>"
                                    },
                                    "packer_run_uuid": {
                                      "type": "string"
                                    },
                                    "images": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "title": "<p>ULID for the image</p>"
                                          },
                                          "image_id": {
                                            "type": "string",
                                            "description": "<p>ID or URL of the remote cloud image as given by a build.</p>"
                                          },
                                          "region": {
                                            "type": "string",
                                            "title": "<p>region as given by <code>packer build</code>. eg. \"ap-east-1\"</p>"
                                          },
                                          "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "title": "<p>Timestamp at which this image was created</p>"
                                          }
                                        },
                                        "description": "Represents the actual region:image_id mapping for a single image, in a\nsingle build."
                                      }
                                    },
                                    "cloud_provider": {
                                      "type": "string",
                                      "title": "<p>aws</p>"
                                    },
                                    "status": {
                                      "title": "<p>complete</p>",
                                      "type": "string",
                                      "enum": [
                                        "UNSET",
                                        "RUNNING",
                                        "DONE",
                                        "CANCELLED",
                                        "FAILED"
                                      ],
                                      "default": "UNSET"
                                    },
                                    "created_at": {
                                      "type": "string",
                                      "format": "date-time"
                                    },
                                    "updated_at": {
                                      "type": "string",
                                      "format": "date-time"
                                    },
                                    "labels": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "string"
                                      },
                                      "title": "<p>unstructured metadata</p>"
                                    }
                                  }
                                },
                                "title": "<p>link to set of builds for an image iteration</p>"
                              }
                            }
                          },
                          "author_id": {
                            "type": "string",
                            "title": "<p>The author who pointed the channel to the iteration</p>"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "<p>timestamp this channel pointer was created at</p>"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                },
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "<p>A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n<code>path/google.protobuf.Duration</code>). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).</p>\n<p>In practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme <code>http</code>, <code>https</code>, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:</p>\n<ul>\n<li>If no scheme is provided, <code>https</code> is assumed.</li>\n<li>An HTTP GET on the URL must yield a [google.protobuf.Type][]\nvalue in binary format, or produce an error.</li>\n<li>Applications are allowed to cache lookup results based on the\nURL, or have them precompiled into a binary to avoid any\nlookup. Therefore, binary compatibility needs to be preserved\non changes to types. (Use versioned type names to manage\nbreaking changes.)</li>\n</ul>\n<p>Note: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.</p>\n<p>Schemes other than <code>http</code>, <code>https</code> (or the empty scheme) might be\nused with implementation specific semantics.</p>"
                      },
                      "value": {
                        "type": "string",
                        "format": "byte",
                        "description": "<p>Must be a valid serialized protocol buffer of the above specified type.</p>"
                      }
                    },
                    "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "<p>organization_id is the id of the organization.</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "<p>project_id is the projects id.</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket_slug",
            "description": "<p>same as in Bucket</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.region.provider",
            "description": "<p>provider is the named cloud provider (\"aws\", \"gcp\", \"azure\").</p>",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "location.region.region",
            "description": "<p>region is the cloud region (\"us-west1\", \"us-east1\").</p>",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": ["PackerService"]
      },
      "post": {
        "summary": "<h2>Operations related to channels (mutable aliases/pointers for an image iteration)</h2>",
        "operationId": "ChannelService_CreateChannel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "channel": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "<p>ULID of this chanel</p>"
                    },
                    "slug": {
                      "type": "string",
                      "title": "<p>Something like \"production-stable\"</p>"
                    },
                    "bucket_slug": {
                      "type": "string",
                      "title": "<p>image bucket this belongs to</p>"
                    },
                    "author_id": {
                      "type": "string",
                      "title": "<p>The author who created the channel</p>"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "<p>timestamp this channel was created at</p>"
                    },
                    "revoked_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "<p>timestamp this channel was revoked at</p>"
                    },
                    "revocation_message": {
                      "type": "string",
                      "title": "<p>message with the reason of why this channel was revoked</p>"
                    },
                    "pointer": {
                      "title": "<p>The channel pointer to the iteration</p>",
                      "type": "object",
                      "properties": {
                        "iteration": {
                          "title": "<p>The iteration the channel is pointing to</p>",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "title": "<p>ULID</p>"
                            },
                            "bucket_slug": {
                              "type": "string",
                              "title": "<p>same bucket_slug as in the Bucket object</p>"
                            },
                            "iteration_ancestor_id": {
                              "type": "string",
                              "title": "<p>what image was used as source</p>"
                            },
                            "incremental_version": {
                              "type": "integer",
                              "format": "int32",
                              "title": "<p>e.g 15</p>"
                            },
                            "complete": {
                              "type": "boolean",
                              "description": "<p>If true, this iteration is considered \"ready to use\" and will be\nreturned even if the include_incomplete flage is \"false\" in the\nlist iterations request.</p>"
                            },
                            "author_id": {
                              "type": "string",
                              "title": "<p>who created the iteration</p>"
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "<p>when iteration was created or updated</p>"
                            },
                            "updated_at": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "fingerprint": {
                              "type": "string",
                              "description": "<p>fingerprint of the build; this will allow to regroup image builds under\nthe same iteration. So it could be for example a git sha.</p>"
                            },
                            "builds": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "title": "<p>ULID</p>"
                                  },
                                  "iteration_id": {
                                    "type": "string",
                                    "title": "<p>ULID of the iteration</p>"
                                  },
                                  "component_type": {
                                    "type": "string",
                                    "title": "<p>builder or post-processor used to build this</p>"
                                  },
                                  "packer_run_uuid": {
                                    "type": "string"
                                  },
                                  "images": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "title": "<p>ULID for the image</p>"
                                        },
                                        "image_id": {
                                          "type": "string",
                                          "description": "<p>ID or URL of the remote cloud image as given by a build.</p>"
                                        },
                                        "region": {
                                          "type": "string",
                                          "title": "<p>region as given by <code>packer build</code>. eg. \"ap-east-1\"</p>"
                                        },
                                        "created_at": {
                                          "type": "string",
                                          "format": "date-time",
                                          "title": "<p>Timestamp at which this image was created</p>"
                                        }
                                      },
                                      "description": "Represents the actual region:image_id mapping for a single image, in a\nsingle build."
                                    }
                                  },
                                  "cloud_provider": {
                                    "type": "string",
                                    "title": "<p>aws</p>"
                                  },
                                  "status": {
                                    "title": "<p>complete</p>",
                                    "type": "string",
                                    "enum": [
                                      "UNSET",
                                      "RUNNING",
                                      "DONE",
                                      "CANCELLED",
                                      "FAILED"
                                    ],
                                    "default": "UNSET"
                                  },
                                  "created_at": {
                                    "type": "string",
                                    "format": "date-time"
                                  },
                                  "updated_at": {
                                    "type": "string",
                                    "format": "date-time"
                                  },
                                  "labels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    },
                                    "title": "<p>unstructured metadata</p>"
                                  }
                                }
                              },
                              "title": "<p>link to set of builds for an image iteration</p>"
                            }
                          }
                        },
                        "author_id": {
                          "type": "string",
                          "title": "<p>The author who pointed the channel to the iteration</p>"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "<p>timestamp this channel pointer was created at</p>"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                },
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "<p>A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n<code>path/google.protobuf.Duration</code>). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).</p>\n<p>In practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme <code>http</code>, <code>https</code>, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:</p>\n<ul>\n<li>If no scheme is provided, <code>https</code> is assumed.</li>\n<li>An HTTP GET on the URL must yield a [google.protobuf.Type][]\nvalue in binary format, or produce an error.</li>\n<li>Applications are allowed to cache lookup results based on the\nURL, or have them precompiled into a binary to avoid any\nlookup. Therefore, binary compatibility needs to be preserved\non changes to types. (Use versioned type names to manage\nbreaking changes.)</li>\n</ul>\n<p>Note: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.</p>\n<p>Schemes other than <code>http</code>, <code>https</code> (or the empty scheme) might be\nused with implementation specific semantics.</p>"
                      },
                      "value": {
                        "type": "string",
                        "format": "byte",
                        "description": "<p>Must be a valid serialized protocol buffer of the above specified type.</p>"
                      }
                    },
                    "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "<p>organization_id is the id of the organization.</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "<p>project_id is the projects id.</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket_slug",
            "description": "<p>same as in Bucket</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "slug": {
                  "type": "string",
                  "description": "<p>Name of this channel, something like \"production\".</p>"
                },
                "bucket_slug": {
                  "type": "string",
                  "title": "<p>same as in Bucket</p>"
                },
                "incremental_version": {
                  "type": "integer",
                  "format": "int32"
                },
                "iteration_id": {
                  "type": "string"
                },
                "fingerprint": {
                  "type": "string"
                },
                "location": {
                  "type": "object",
                  "properties": {
                    "organization_id": {
                      "type": "string",
                      "description": "<p>organization_id is the id of the organization.</p>"
                    },
                    "project_id": {
                      "type": "string",
                      "description": "<p>project_id is the projects id.</p>"
                    },
                    "region": {
                      "description": "<p>region is the region that the resource is located in. It is\noptional if the object being referenced is a global object.</p>",
                      "type": "object",
                      "properties": {
                        "provider": {
                          "type": "string",
                          "title": "<p>provider is the named cloud provider (\"aws\", \"gcp\", \"azure\")</p>"
                        },
                        "region": {
                          "type": "string",
                          "title": "<p>region is the cloud region (\"us-west1\", \"us-east1\")</p>"
                        }
                      }
                    }
                  }
                }
              },
              "title": "Image Channel Messages"
            }
          }
        ],
        "tags": ["PackerService"]
      }
    },
    "/packer/2021-04-30/organizations/{location.organization_id}/projects/{location.project_id}/images/{bucket_slug}/channels/{slug}": {
      "get": {
        "operationId": "ChannelService_GetChannel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "channel": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "<p>ULID of this chanel</p>"
                    },
                    "slug": {
                      "type": "string",
                      "title": "<p>Something like \"production-stable\"</p>"
                    },
                    "bucket_slug": {
                      "type": "string",
                      "title": "<p>image bucket this belongs to</p>"
                    },
                    "author_id": {
                      "type": "string",
                      "title": "<p>The author who created the channel</p>"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "<p>timestamp this channel was created at</p>"
                    },
                    "revoked_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "<p>timestamp this channel was revoked at</p>"
                    },
                    "revocation_message": {
                      "type": "string",
                      "title": "<p>message with the reason of why this channel was revoked</p>"
                    },
                    "pointer": {
                      "title": "<p>The channel pointer to the iteration</p>",
                      "type": "object",
                      "properties": {
                        "iteration": {
                          "title": "<p>The iteration the channel is pointing to</p>",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "title": "<p>ULID</p>"
                            },
                            "bucket_slug": {
                              "type": "string",
                              "title": "<p>same bucket_slug as in the Bucket object</p>"
                            },
                            "iteration_ancestor_id": {
                              "type": "string",
                              "title": "<p>what image was used as source</p>"
                            },
                            "incremental_version": {
                              "type": "integer",
                              "format": "int32",
                              "title": "<p>e.g 15</p>"
                            },
                            "complete": {
                              "type": "boolean",
                              "description": "<p>If true, this iteration is considered \"ready to use\" and will be\nreturned even if the include_incomplete flage is \"false\" in the\nlist iterations request.</p>"
                            },
                            "author_id": {
                              "type": "string",
                              "title": "<p>who created the iteration</p>"
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "<p>when iteration was created or updated</p>"
                            },
                            "updated_at": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "fingerprint": {
                              "type": "string",
                              "description": "<p>fingerprint of the build; this will allow to regroup image builds under\nthe same iteration. So it could be for example a git sha.</p>"
                            },
                            "builds": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "title": "<p>ULID</p>"
                                  },
                                  "iteration_id": {
                                    "type": "string",
                                    "title": "<p>ULID of the iteration</p>"
                                  },
                                  "component_type": {
                                    "type": "string",
                                    "title": "<p>builder or post-processor used to build this</p>"
                                  },
                                  "packer_run_uuid": {
                                    "type": "string"
                                  },
                                  "images": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "title": "<p>ULID for the image</p>"
                                        },
                                        "image_id": {
                                          "type": "string",
                                          "description": "<p>ID or URL of the remote cloud image as given by a build.</p>"
                                        },
                                        "region": {
                                          "type": "string",
                                          "title": "<p>region as given by <code>packer build</code>. eg. \"ap-east-1\"</p>"
                                        },
                                        "created_at": {
                                          "type": "string",
                                          "format": "date-time",
                                          "title": "<p>Timestamp at which this image was created</p>"
                                        }
                                      },
                                      "description": "Represents the actual region:image_id mapping for a single image, in a\nsingle build."
                                    }
                                  },
                                  "cloud_provider": {
                                    "type": "string",
                                    "title": "<p>aws</p>"
                                  },
                                  "status": {
                                    "title": "<p>complete</p>",
                                    "type": "string",
                                    "enum": [
                                      "UNSET",
                                      "RUNNING",
                                      "DONE",
                                      "CANCELLED",
                                      "FAILED"
                                    ],
                                    "default": "UNSET"
                                  },
                                  "created_at": {
                                    "type": "string",
                                    "format": "date-time"
                                  },
                                  "updated_at": {
                                    "type": "string",
                                    "format": "date-time"
                                  },
                                  "labels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    },
                                    "title": "<p>unstructured metadata</p>"
                                  }
                                }
                              },
                              "title": "<p>link to set of builds for an image iteration</p>"
                            }
                          }
                        },
                        "author_id": {
                          "type": "string",
                          "title": "<p>The author who pointed the channel to the iteration</p>"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "<p>timestamp this channel pointer was created at</p>"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                },
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "<p>A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n<code>path/google.protobuf.Duration</code>). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).</p>\n<p>In practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme <code>http</code>, <code>https</code>, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:</p>\n<ul>\n<li>If no scheme is provided, <code>https</code> is assumed.</li>\n<li>An HTTP GET on the URL must yield a [google.protobuf.Type][]\nvalue in binary format, or produce an error.</li>\n<li>Applications are allowed to cache lookup results based on the\nURL, or have them precompiled into a binary to avoid any\nlookup. Therefore, binary compatibility needs to be preserved\non changes to types. (Use versioned type names to manage\nbreaking changes.)</li>\n</ul>\n<p>Note: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.</p>\n<p>Schemes other than <code>http</code>, <code>https</code> (or the empty scheme) might be\nused with implementation specific semantics.</p>"
                      },
                      "value": {
                        "type": "string",
                        "format": "byte",
                        "description": "<p>Must be a valid serialized protocol buffer of the above specified type.</p>"
                      }
                    },
                    "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "<p>organization_id is the id of the organization.</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "<p>project_id is the projects id.</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket_slug",
            "description": "<p>same as in Bucket</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "slug",
            "description": "<p>production-stable</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.region.provider",
            "description": "<p>provider is the named cloud provider (\"aws\", \"gcp\", \"azure\").</p>",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "location.region.region",
            "description": "<p>region is the cloud region (\"us-west1\", \"us-east1\").</p>",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": ["PackerService"]
      },
      "delete": {
        "operationId": "ChannelService_DeleteChannel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                },
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "<p>A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n<code>path/google.protobuf.Duration</code>). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).</p>\n<p>In practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme <code>http</code>, <code>https</code>, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:</p>\n<ul>\n<li>If no scheme is provided, <code>https</code> is assumed.</li>\n<li>An HTTP GET on the URL must yield a [google.protobuf.Type][]\nvalue in binary format, or produce an error.</li>\n<li>Applications are allowed to cache lookup results based on the\nURL, or have them precompiled into a binary to avoid any\nlookup. Therefore, binary compatibility needs to be preserved\non changes to types. (Use versioned type names to manage\nbreaking changes.)</li>\n</ul>\n<p>Note: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.</p>\n<p>Schemes other than <code>http</code>, <code>https</code> (or the empty scheme) might be\nused with implementation specific semantics.</p>"
                      },
                      "value": {
                        "type": "string",
                        "format": "byte",
                        "description": "<p>Must be a valid serialized protocol buffer of the above specified type.</p>"
                      }
                    },
                    "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "<p>organization_id is the id of the organization.</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "<p>project_id is the projects id.</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket_slug",
            "description": "<p>The bucket slug</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "slug",
            "description": "<p>The channel slug. e.g. production-stable</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.region.provider",
            "description": "<p>provider is the named cloud provider (\"aws\", \"gcp\", \"azure\").</p>",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "location.region.region",
            "description": "<p>region is the cloud region (\"us-west1\", \"us-east1\").</p>",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "revocation_message",
            "description": "<p>Optional field to provide the reason for why this channel is being revoked.\nOnly useful for a channel that is assigned to an iteration.</p>",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": ["PackerService"]
      },
      "patch": {
        "operationId": "ChannelService_UpdateChannel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "channel": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "<p>ULID of this chanel</p>"
                    },
                    "slug": {
                      "type": "string",
                      "title": "<p>Something like \"production-stable\"</p>"
                    },
                    "bucket_slug": {
                      "type": "string",
                      "title": "<p>image bucket this belongs to</p>"
                    },
                    "author_id": {
                      "type": "string",
                      "title": "<p>The author who created the channel</p>"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "<p>timestamp this channel was created at</p>"
                    },
                    "revoked_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "<p>timestamp this channel was revoked at</p>"
                    },
                    "revocation_message": {
                      "type": "string",
                      "title": "<p>message with the reason of why this channel was revoked</p>"
                    },
                    "pointer": {
                      "title": "<p>The channel pointer to the iteration</p>",
                      "type": "object",
                      "properties": {
                        "iteration": {
                          "title": "<p>The iteration the channel is pointing to</p>",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "title": "<p>ULID</p>"
                            },
                            "bucket_slug": {
                              "type": "string",
                              "title": "<p>same bucket_slug as in the Bucket object</p>"
                            },
                            "iteration_ancestor_id": {
                              "type": "string",
                              "title": "<p>what image was used as source</p>"
                            },
                            "incremental_version": {
                              "type": "integer",
                              "format": "int32",
                              "title": "<p>e.g 15</p>"
                            },
                            "complete": {
                              "type": "boolean",
                              "description": "<p>If true, this iteration is considered \"ready to use\" and will be\nreturned even if the include_incomplete flage is \"false\" in the\nlist iterations request.</p>"
                            },
                            "author_id": {
                              "type": "string",
                              "title": "<p>who created the iteration</p>"
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "<p>when iteration was created or updated</p>"
                            },
                            "updated_at": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "fingerprint": {
                              "type": "string",
                              "description": "<p>fingerprint of the build; this will allow to regroup image builds under\nthe same iteration. So it could be for example a git sha.</p>"
                            },
                            "builds": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "title": "<p>ULID</p>"
                                  },
                                  "iteration_id": {
                                    "type": "string",
                                    "title": "<p>ULID of the iteration</p>"
                                  },
                                  "component_type": {
                                    "type": "string",
                                    "title": "<p>builder or post-processor used to build this</p>"
                                  },
                                  "packer_run_uuid": {
                                    "type": "string"
                                  },
                                  "images": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "title": "<p>ULID for the image</p>"
                                        },
                                        "image_id": {
                                          "type": "string",
                                          "description": "<p>ID or URL of the remote cloud image as given by a build.</p>"
                                        },
                                        "region": {
                                          "type": "string",
                                          "title": "<p>region as given by <code>packer build</code>. eg. \"ap-east-1\"</p>"
                                        },
                                        "created_at": {
                                          "type": "string",
                                          "format": "date-time",
                                          "title": "<p>Timestamp at which this image was created</p>"
                                        }
                                      },
                                      "description": "Represents the actual region:image_id mapping for a single image, in a\nsingle build."
                                    }
                                  },
                                  "cloud_provider": {
                                    "type": "string",
                                    "title": "<p>aws</p>"
                                  },
                                  "status": {
                                    "title": "<p>complete</p>",
                                    "type": "string",
                                    "enum": [
                                      "UNSET",
                                      "RUNNING",
                                      "DONE",
                                      "CANCELLED",
                                      "FAILED"
                                    ],
                                    "default": "UNSET"
                                  },
                                  "created_at": {
                                    "type": "string",
                                    "format": "date-time"
                                  },
                                  "updated_at": {
                                    "type": "string",
                                    "format": "date-time"
                                  },
                                  "labels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    },
                                    "title": "<p>unstructured metadata</p>"
                                  }
                                }
                              },
                              "title": "<p>link to set of builds for an image iteration</p>"
                            }
                          }
                        },
                        "author_id": {
                          "type": "string",
                          "title": "<p>The author who pointed the channel to the iteration</p>"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "<p>timestamp this channel pointer was created at</p>"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                },
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "<p>A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n<code>path/google.protobuf.Duration</code>). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).</p>\n<p>In practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme <code>http</code>, <code>https</code>, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:</p>\n<ul>\n<li>If no scheme is provided, <code>https</code> is assumed.</li>\n<li>An HTTP GET on the URL must yield a [google.protobuf.Type][]\nvalue in binary format, or produce an error.</li>\n<li>Applications are allowed to cache lookup results based on the\nURL, or have them precompiled into a binary to avoid any\nlookup. Therefore, binary compatibility needs to be preserved\non changes to types. (Use versioned type names to manage\nbreaking changes.)</li>\n</ul>\n<p>Note: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.</p>\n<p>Schemes other than <code>http</code>, <code>https</code> (or the empty scheme) might be\nused with implementation specific semantics.</p>"
                      },
                      "value": {
                        "type": "string",
                        "format": "byte",
                        "description": "<p>Must be a valid serialized protocol buffer of the above specified type.</p>"
                      }
                    },
                    "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "<p>organization_id is the id of the organization.</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "<p>project_id is the projects id.</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket_slug",
            "description": "<p>same as in Bucket</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "slug",
            "description": "<p>production-stable</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "slug": {
                  "type": "string",
                  "title": "<p>production-stable</p>"
                },
                "bucket_slug": {
                  "type": "string",
                  "title": "<p>same as in Bucket</p>"
                },
                "incremental_version": {
                  "type": "integer",
                  "format": "int32"
                },
                "iteration_id": {
                  "type": "string"
                },
                "fingerprint": {
                  "type": "string"
                },
                "ratify": {
                  "type": "boolean",
                  "title": "<p>Ratifies a revoked channel prior to the update</p>"
                },
                "location": {
                  "type": "object",
                  "properties": {
                    "organization_id": {
                      "type": "string",
                      "description": "<p>organization_id is the id of the organization.</p>"
                    },
                    "project_id": {
                      "type": "string",
                      "description": "<p>project_id is the projects id.</p>"
                    },
                    "region": {
                      "description": "<p>region is the region that the resource is located in. It is\noptional if the object being referenced is a global object.</p>",
                      "type": "object",
                      "properties": {
                        "provider": {
                          "type": "string",
                          "title": "<p>provider is the named cloud provider (\"aws\", \"gcp\", \"azure\")</p>"
                        },
                        "region": {
                          "type": "string",
                          "title": "<p>region is the cloud region (\"us-west1\", \"us-east1\")</p>"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "tags": ["PackerService"]
      }
    },
    "/packer/2021-04-30/organizations/{location.organization_id}/projects/{location.project_id}/images/{bucket_slug}/iteration": {
      "get": {
        "summary": "<p>GetIteration allows to get an iteration by</p>\n<ul>\n<li>iteration_id</li>\n<li>incremental_version</li>\n<li>fingerprint\nThese are supplied as a query parameter: e.g.:</li>\n</ul>",
        "description": "images/mybucket/iteration?iteration_id=fingerprint\n\nbucket_slug must always be set because it is possible for iterations to\nhave the same incremental_version or fingerprint across buckets",
        "operationId": "IterationService_GetIteration",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "iteration": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "<p>ULID</p>"
                    },
                    "bucket_slug": {
                      "type": "string",
                      "title": "<p>same bucket_slug as in the Bucket object</p>"
                    },
                    "iteration_ancestor_id": {
                      "type": "string",
                      "title": "<p>what image was used as source</p>"
                    },
                    "incremental_version": {
                      "type": "integer",
                      "format": "int32",
                      "title": "<p>e.g 15</p>"
                    },
                    "complete": {
                      "type": "boolean",
                      "description": "<p>If true, this iteration is considered \"ready to use\" and will be\nreturned even if the include_incomplete flage is \"false\" in the\nlist iterations request.</p>"
                    },
                    "author_id": {
                      "type": "string",
                      "title": "<p>who created the iteration</p>"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "<p>when iteration was created or updated</p>"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "fingerprint": {
                      "type": "string",
                      "description": "<p>fingerprint of the build; this will allow to regroup image builds under\nthe same iteration. So it could be for example a git sha.</p>"
                    },
                    "builds": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "<p>ULID</p>"
                          },
                          "iteration_id": {
                            "type": "string",
                            "title": "<p>ULID of the iteration</p>"
                          },
                          "component_type": {
                            "type": "string",
                            "title": "<p>builder or post-processor used to build this</p>"
                          },
                          "packer_run_uuid": {
                            "type": "string"
                          },
                          "images": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "title": "<p>ULID for the image</p>"
                                },
                                "image_id": {
                                  "type": "string",
                                  "description": "<p>ID or URL of the remote cloud image as given by a build.</p>"
                                },
                                "region": {
                                  "type": "string",
                                  "title": "<p>region as given by <code>packer build</code>. eg. \"ap-east-1\"</p>"
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "title": "<p>Timestamp at which this image was created</p>"
                                }
                              },
                              "description": "Represents the actual region:image_id mapping for a single image, in a\nsingle build."
                            }
                          },
                          "cloud_provider": {
                            "type": "string",
                            "title": "<p>aws</p>"
                          },
                          "status": {
                            "title": "<p>complete</p>",
                            "type": "string",
                            "enum": [
                              "UNSET",
                              "RUNNING",
                              "DONE",
                              "CANCELLED",
                              "FAILED"
                            ],
                            "default": "UNSET"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "labels": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "title": "<p>unstructured metadata</p>"
                          }
                        }
                      },
                      "title": "<p>link to set of builds for an image iteration</p>"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                },
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "<p>A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n<code>path/google.protobuf.Duration</code>). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).</p>\n<p>In practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme <code>http</code>, <code>https</code>, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:</p>\n<ul>\n<li>If no scheme is provided, <code>https</code> is assumed.</li>\n<li>An HTTP GET on the URL must yield a [google.protobuf.Type][]\nvalue in binary format, or produce an error.</li>\n<li>Applications are allowed to cache lookup results based on the\nURL, or have them precompiled into a binary to avoid any\nlookup. Therefore, binary compatibility needs to be preserved\non changes to types. (Use versioned type names to manage\nbreaking changes.)</li>\n</ul>\n<p>Note: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.</p>\n<p>Schemes other than <code>http</code>, <code>https</code> (or the empty scheme) might be\nused with implementation specific semantics.</p>"
                      },
                      "value": {
                        "type": "string",
                        "format": "byte",
                        "description": "<p>Must be a valid serialized protocol buffer of the above specified type.</p>"
                      }
                    },
                    "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "<p>organization_id is the id of the organization.</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "<p>project_id is the projects id.</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket_slug",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.region.provider",
            "description": "<p>provider is the named cloud provider (\"aws\", \"gcp\", \"azure\").</p>",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "location.region.region",
            "description": "<p>region is the cloud region (\"us-west1\", \"us-east1\").</p>",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "incremental_version",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "iteration_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fingerprint",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": ["PackerService"]
      }
    },
    "/packer/2021-04-30/organizations/{location.organization_id}/projects/{location.project_id}/images/{bucket_slug}/iterations": {
      "get": {
        "operationId": "IterationService_ListIterations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "iterations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "<p>ULID</p>"
                      },
                      "bucket_slug": {
                        "type": "string",
                        "title": "<p>same bucket_slug as in the Bucket object</p>"
                      },
                      "iteration_ancestor_id": {
                        "type": "string",
                        "title": "<p>what image was used as source</p>"
                      },
                      "incremental_version": {
                        "type": "integer",
                        "format": "int32",
                        "title": "<p>e.g 15</p>"
                      },
                      "complete": {
                        "type": "boolean",
                        "description": "<p>If true, this iteration is considered \"ready to use\" and will be\nreturned even if the include_incomplete flage is \"false\" in the\nlist iterations request.</p>"
                      },
                      "author_id": {
                        "type": "string",
                        "title": "<p>who created the iteration</p>"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "<p>when iteration was created or updated</p>"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "fingerprint": {
                        "type": "string",
                        "description": "<p>fingerprint of the build; this will allow to regroup image builds under\nthe same iteration. So it could be for example a git sha.</p>"
                      }
                    },
                    "description": "The list endpoint should not return build information, but should return\nwhat channels are associated with a given iteration."
                  }
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "<p>This token allows you to get the next page of results for list requests.\nIf the number of results is larger than <code>page_size</code>, use the\n<code>next_page_token</code> as a value for the query parameter <code>next_page_token</code> in\nthe next request. The value will become empty when there are no more pages.</p>"
                    },
                    "previous_page_token": {
                      "type": "string",
                      "description": "<p>This token allows you to get the previous page of results for list\nrequests. If the number of results is larger than <code>page_size</code>, use the\n<code>previous_page_token</code> as a value for the query parameter\n<code>previous_page_token</code> in the next request. The value will become empty when\nthere are no more pages.</p>"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                },
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "<p>A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n<code>path/google.protobuf.Duration</code>). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).</p>\n<p>In practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme <code>http</code>, <code>https</code>, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:</p>\n<ul>\n<li>If no scheme is provided, <code>https</code> is assumed.</li>\n<li>An HTTP GET on the URL must yield a [google.protobuf.Type][]\nvalue in binary format, or produce an error.</li>\n<li>Applications are allowed to cache lookup results based on the\nURL, or have them precompiled into a binary to avoid any\nlookup. Therefore, binary compatibility needs to be preserved\non changes to types. (Use versioned type names to manage\nbreaking changes.)</li>\n</ul>\n<p>Note: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.</p>\n<p>Schemes other than <code>http</code>, <code>https</code> (or the empty scheme) might be\nused with implementation specific semantics.</p>"
                      },
                      "value": {
                        "type": "string",
                        "format": "byte",
                        "description": "<p>Must be a valid serialized protocol buffer of the above specified type.</p>"
                      }
                    },
                    "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "<p>organization_id is the id of the organization.</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "<p>project_id is the projects id.</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket_slug",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.region.provider",
            "description": "<p>provider is the named cloud provider (\"aws\", \"gcp\", \"azure\").</p>",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "location.region.region",
            "description": "<p>region is the cloud region (\"us-west1\", \"us-east1\").</p>",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "include_incomplete",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.page_size",
            "description": "<p>The max number of results per page that should be returned. If the number\nof available results is larger than <code>page_size</code>, a <code>next_page_token</code> is\nreturned which can be used to get the next page of results in subsequent\nrequests. A value of zero will cause <code>page_size</code> to be defaulted.</p>",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "pagination.next_page_token",
            "description": "<p>Specifies a page token to use to retrieve the next page. Set this to the\n<code>next_page_token</code> returned by previous list requests to get the next page of\nresults. If set, <code>previous_page_token</code> must not be set.</p>",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.previous_page_token",
            "description": "<p>Specifies a page token to use to retrieve the previous page. Set this to\nthe <code>previous_page_token</code> returned by previous list requests to get the\nprevious page of results. If set, <code>next_page_token</code> must not be set.</p>",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sorting.order_by",
            "description": "<p>Specifies the list of per field ordering that should be used for sorting.\nThe order matters as rows are sorted in order by fields and when the field\nmatches, the next field is used to tie break the ordering.\nThe per field default ordering is ascending.</p>\n<p>The fields should be immutabile, unique, and orderable. If the field is\nnot unique, more than one sort fields should be passed.</p>\n<p>Example: oder_by=name,age desc,created_at asc\nIn that case, 'name' will get the default 'ascending' order.</p>",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": ["PackerService"]
      },
      "post": {
        "summary": "<h2>Operations related to image iterations</h2>",
        "operationId": "IterationService_CreateIteration",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "iteration": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "<p>ULID</p>"
                    },
                    "bucket_slug": {
                      "type": "string",
                      "title": "<p>same bucket_slug as in the Bucket object</p>"
                    },
                    "iteration_ancestor_id": {
                      "type": "string",
                      "title": "<p>what image was used as source</p>"
                    },
                    "incremental_version": {
                      "type": "integer",
                      "format": "int32",
                      "title": "<p>e.g 15</p>"
                    },
                    "complete": {
                      "type": "boolean",
                      "description": "<p>If true, this iteration is considered \"ready to use\" and will be\nreturned even if the include_incomplete flage is \"false\" in the\nlist iterations request.</p>"
                    },
                    "author_id": {
                      "type": "string",
                      "title": "<p>who created the iteration</p>"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "<p>when iteration was created or updated</p>"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "fingerprint": {
                      "type": "string",
                      "description": "<p>fingerprint of the build; this will allow to regroup image builds under\nthe same iteration. So it could be for example a git sha.</p>"
                    },
                    "builds": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "<p>ULID</p>"
                          },
                          "iteration_id": {
                            "type": "string",
                            "title": "<p>ULID of the iteration</p>"
                          },
                          "component_type": {
                            "type": "string",
                            "title": "<p>builder or post-processor used to build this</p>"
                          },
                          "packer_run_uuid": {
                            "type": "string"
                          },
                          "images": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "title": "<p>ULID for the image</p>"
                                },
                                "image_id": {
                                  "type": "string",
                                  "description": "<p>ID or URL of the remote cloud image as given by a build.</p>"
                                },
                                "region": {
                                  "type": "string",
                                  "title": "<p>region as given by <code>packer build</code>. eg. \"ap-east-1\"</p>"
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "title": "<p>Timestamp at which this image was created</p>"
                                }
                              },
                              "description": "Represents the actual region:image_id mapping for a single image, in a\nsingle build."
                            }
                          },
                          "cloud_provider": {
                            "type": "string",
                            "title": "<p>aws</p>"
                          },
                          "status": {
                            "title": "<p>complete</p>",
                            "type": "string",
                            "enum": [
                              "UNSET",
                              "RUNNING",
                              "DONE",
                              "CANCELLED",
                              "FAILED"
                            ],
                            "default": "UNSET"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "labels": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "title": "<p>unstructured metadata</p>"
                          }
                        }
                      },
                      "title": "<p>link to set of builds for an image iteration</p>"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                },
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "<p>A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n<code>path/google.protobuf.Duration</code>). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).</p>\n<p>In practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme <code>http</code>, <code>https</code>, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:</p>\n<ul>\n<li>If no scheme is provided, <code>https</code> is assumed.</li>\n<li>An HTTP GET on the URL must yield a [google.protobuf.Type][]\nvalue in binary format, or produce an error.</li>\n<li>Applications are allowed to cache lookup results based on the\nURL, or have them precompiled into a binary to avoid any\nlookup. Therefore, binary compatibility needs to be preserved\non changes to types. (Use versioned type names to manage\nbreaking changes.)</li>\n</ul>\n<p>Note: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.</p>\n<p>Schemes other than <code>http</code>, <code>https</code> (or the empty scheme) might be\nused with implementation specific semantics.</p>"
                      },
                      "value": {
                        "type": "string",
                        "format": "byte",
                        "description": "<p>Must be a valid serialized protocol buffer of the above specified type.</p>"
                      }
                    },
                    "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "<p>organization_id is the id of the organization.</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "<p>project_id is the projects id.</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket_slug",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "location": {
                  "type": "object",
                  "properties": {
                    "organization_id": {
                      "type": "string",
                      "description": "<p>organization_id is the id of the organization.</p>"
                    },
                    "project_id": {
                      "type": "string",
                      "description": "<p>project_id is the projects id.</p>"
                    },
                    "region": {
                      "description": "<p>region is the region that the resource is located in. It is\noptional if the object being referenced is a global object.</p>",
                      "type": "object",
                      "properties": {
                        "provider": {
                          "type": "string",
                          "title": "<p>provider is the named cloud provider (\"aws\", \"gcp\", \"azure\")</p>"
                        },
                        "region": {
                          "type": "string",
                          "title": "<p>region is the cloud region (\"us-west1\", \"us-east1\")</p>"
                        }
                      }
                    }
                  }
                },
                "bucket_slug": {
                  "type": "string"
                },
                "fingerprint": {
                  "type": "string",
                  "description": "<p>fingerprint of the build; this will allow to regroup image builds under\nthe same iteration. So it could be for example a git sha.</p>"
                }
              }
            }
          }
        ],
        "tags": ["PackerService"]
      }
    },
    "/packer/2021-04-30/organizations/{location.organization_id}/projects/{location.project_id}/images/{bucket_slug}/iterations/{build.iteration_id}": {
      "post": {
        "operationId": "BuildService_CreateBuild",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "build": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "<p>ULID</p>"
                    },
                    "iteration_id": {
                      "type": "string",
                      "title": "<p>ULID of the iteration</p>"
                    },
                    "component_type": {
                      "type": "string",
                      "title": "<p>builder or post-processor used to build this</p>"
                    },
                    "packer_run_uuid": {
                      "type": "string"
                    },
                    "images": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "<p>ULID for the image</p>"
                          },
                          "image_id": {
                            "type": "string",
                            "description": "<p>ID or URL of the remote cloud image as given by a build.</p>"
                          },
                          "region": {
                            "type": "string",
                            "title": "<p>region as given by <code>packer build</code>. eg. \"ap-east-1\"</p>"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "<p>Timestamp at which this image was created</p>"
                          }
                        },
                        "description": "Represents the actual region:image_id mapping for a single image, in a\nsingle build."
                      }
                    },
                    "cloud_provider": {
                      "type": "string",
                      "title": "<p>aws</p>"
                    },
                    "status": {
                      "title": "<p>complete</p>",
                      "type": "string",
                      "enum": [
                        "UNSET",
                        "RUNNING",
                        "DONE",
                        "CANCELLED",
                        "FAILED"
                      ],
                      "default": "UNSET"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "labels": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "title": "<p>unstructured metadata</p>"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                },
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "<p>A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n<code>path/google.protobuf.Duration</code>). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).</p>\n<p>In practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme <code>http</code>, <code>https</code>, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:</p>\n<ul>\n<li>If no scheme is provided, <code>https</code> is assumed.</li>\n<li>An HTTP GET on the URL must yield a [google.protobuf.Type][]\nvalue in binary format, or produce an error.</li>\n<li>Applications are allowed to cache lookup results based on the\nURL, or have them precompiled into a binary to avoid any\nlookup. Therefore, binary compatibility needs to be preserved\non changes to types. (Use versioned type names to manage\nbreaking changes.)</li>\n</ul>\n<p>Note: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.</p>\n<p>Schemes other than <code>http</code>, <code>https</code> (or the empty scheme) might be\nused with implementation specific semantics.</p>"
                      },
                      "value": {
                        "type": "string",
                        "format": "byte",
                        "description": "<p>Must be a valid serialized protocol buffer of the above specified type.</p>"
                      }
                    },
                    "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "<p>organization_id is the id of the organization.</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "<p>project_id is the projects id.</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket_slug",
            "description": "<p>bucket info</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "build.iteration_id",
            "description": "<p>ULID of the iteration</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "location": {
                  "title": "<p>org and project info</p>",
                  "type": "object",
                  "properties": {
                    "organization_id": {
                      "type": "string",
                      "description": "<p>organization_id is the id of the organization.</p>"
                    },
                    "project_id": {
                      "type": "string",
                      "description": "<p>project_id is the projects id.</p>"
                    },
                    "region": {
                      "description": "<p>region is the region that the resource is located in. It is\noptional if the object being referenced is a global object.</p>",
                      "type": "object",
                      "properties": {
                        "provider": {
                          "type": "string",
                          "title": "<p>provider is the named cloud provider (\"aws\", \"gcp\", \"azure\")</p>"
                        },
                        "region": {
                          "type": "string",
                          "title": "<p>region is the cloud region (\"us-west1\", \"us-east1\")</p>"
                        }
                      }
                    }
                  }
                },
                "bucket_slug": {
                  "type": "string",
                  "title": "<p>bucket info</p>"
                },
                "build": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "<p>ULID</p>"
                    },
                    "iteration_id": {
                      "type": "string",
                      "title": "<p>ULID of the iteration</p>"
                    },
                    "component_type": {
                      "type": "string",
                      "title": "<p>builder or post-processor used to build this</p>"
                    },
                    "packer_run_uuid": {
                      "type": "string"
                    },
                    "images": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "<p>ULID for the image</p>"
                          },
                          "image_id": {
                            "type": "string",
                            "description": "<p>ID or URL of the remote cloud image as given by a build.</p>"
                          },
                          "region": {
                            "type": "string",
                            "title": "<p>region as given by <code>packer build</code>. eg. \"ap-east-1\"</p>"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "<p>Timestamp at which this image was created</p>"
                          }
                        },
                        "description": "Represents the actual region:image_id mapping for a single image, in a\nsingle build."
                      }
                    },
                    "cloud_provider": {
                      "type": "string",
                      "title": "<p>aws</p>"
                    },
                    "status": {
                      "title": "<p>complete</p>",
                      "type": "string",
                      "enum": [
                        "UNSET",
                        "RUNNING",
                        "DONE",
                        "CANCELLED",
                        "FAILED"
                      ],
                      "default": "UNSET"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "labels": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "title": "<p>unstructured metadata</p>"
                    }
                  },
                  "description": "<p>Custom build info.\nTODO: We may want to make this input object not contain the\nID or ULID, since those are not user-settable.</p>"
                },
                "fingerprint": {
                  "type": "string",
                  "title": "<p>Git sha to match against nascent iteration</p>"
                }
              }
            }
          }
        ],
        "tags": ["PackerService"]
      }
    },
    "/packer/2021-04-30/organizations/{location.organization_id}/projects/{location.project_id}/images/{bucket_slug}/iterations/{incremental_version}/ancestors": {
      "get": {
        "summary": "<p>API Endpoints to ease UI implementation</p>",
        "operationId": "BucketService_GetAncestorImages",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "ancestors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "<p>ULID</p>"
                      },
                      "bucket_slug": {
                        "type": "string",
                        "title": "<p>same bucket_slug as in the Bucket object</p>"
                      },
                      "iteration_ancestor_id": {
                        "type": "string",
                        "title": "<p>what image was used as source</p>"
                      },
                      "incremental_version": {
                        "type": "integer",
                        "format": "int32",
                        "title": "<p>e.g 15</p>"
                      },
                      "complete": {
                        "type": "boolean",
                        "description": "<p>If true, this iteration is considered \"ready to use\" and will be\nreturned even if the include_incomplete flage is \"false\" in the\nlist iterations request.</p>"
                      },
                      "author_id": {
                        "type": "string",
                        "title": "<p>who created the iteration</p>"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "<p>when iteration was created or updated</p>"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "fingerprint": {
                        "type": "string",
                        "description": "<p>fingerprint of the build; this will allow to regroup image builds under\nthe same iteration. So it could be for example a git sha.</p>"
                      },
                      "builds": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "title": "<p>ULID</p>"
                            },
                            "iteration_id": {
                              "type": "string",
                              "title": "<p>ULID of the iteration</p>"
                            },
                            "component_type": {
                              "type": "string",
                              "title": "<p>builder or post-processor used to build this</p>"
                            },
                            "packer_run_uuid": {
                              "type": "string"
                            },
                            "images": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "title": "<p>ULID for the image</p>"
                                  },
                                  "image_id": {
                                    "type": "string",
                                    "description": "<p>ID or URL of the remote cloud image as given by a build.</p>"
                                  },
                                  "region": {
                                    "type": "string",
                                    "title": "<p>region as given by <code>packer build</code>. eg. \"ap-east-1\"</p>"
                                  },
                                  "created_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "title": "<p>Timestamp at which this image was created</p>"
                                  }
                                },
                                "description": "Represents the actual region:image_id mapping for a single image, in a\nsingle build."
                              }
                            },
                            "cloud_provider": {
                              "type": "string",
                              "title": "<p>aws</p>"
                            },
                            "status": {
                              "title": "<p>complete</p>",
                              "type": "string",
                              "enum": [
                                "UNSET",
                                "RUNNING",
                                "DONE",
                                "CANCELLED",
                                "FAILED"
                              ],
                              "default": "UNSET"
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "updated_at": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "labels": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              },
                              "title": "<p>unstructured metadata</p>"
                            }
                          }
                        },
                        "title": "<p>link to set of builds for an image iteration</p>"
                      }
                    },
                    "title": "image iterations messages"
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                },
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "<p>A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n<code>path/google.protobuf.Duration</code>). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).</p>\n<p>In practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme <code>http</code>, <code>https</code>, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:</p>\n<ul>\n<li>If no scheme is provided, <code>https</code> is assumed.</li>\n<li>An HTTP GET on the URL must yield a [google.protobuf.Type][]\nvalue in binary format, or produce an error.</li>\n<li>Applications are allowed to cache lookup results based on the\nURL, or have them precompiled into a binary to avoid any\nlookup. Therefore, binary compatibility needs to be preserved\non changes to types. (Use versioned type names to manage\nbreaking changes.)</li>\n</ul>\n<p>Note: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.</p>\n<p>Schemes other than <code>http</code>, <code>https</code> (or the empty scheme) might be\nused with implementation specific semantics.</p>"
                      },
                      "value": {
                        "type": "string",
                        "format": "byte",
                        "description": "<p>Must be a valid serialized protocol buffer of the above specified type.</p>"
                      }
                    },
                    "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "<p>organization_id is the id of the organization.</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "<p>project_id is the projects id.</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket_slug",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "incremental_version",
            "description": "<p>may need to replace with image iteration id</p>",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "location.region.provider",
            "description": "<p>provider is the named cloud provider (\"aws\", \"gcp\", \"azure\").</p>",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "location.region.region",
            "description": "<p>region is the cloud region (\"us-west1\", \"us-east1\").</p>",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": ["PackerService"]
      }
    },
    "/packer/2021-04-30/organizations/{location.organization_id}/projects/{location.project_id}/images/{bucket_slug}/iterations/{incremental_version}/children": {
      "get": {
        "operationId": "BucketService_GetChildImages",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "children": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "<p>ULID</p>"
                      },
                      "bucket_slug": {
                        "type": "string",
                        "title": "<p>same bucket_slug as in the Bucket object</p>"
                      },
                      "iteration_ancestor_id": {
                        "type": "string",
                        "title": "<p>what image was used as source</p>"
                      },
                      "incremental_version": {
                        "type": "integer",
                        "format": "int32",
                        "title": "<p>e.g 15</p>"
                      },
                      "complete": {
                        "type": "boolean",
                        "description": "<p>If true, this iteration is considered \"ready to use\" and will be\nreturned even if the include_incomplete flage is \"false\" in the\nlist iterations request.</p>"
                      },
                      "author_id": {
                        "type": "string",
                        "title": "<p>who created the iteration</p>"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "<p>when iteration was created or updated</p>"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "fingerprint": {
                        "type": "string",
                        "description": "<p>fingerprint of the build; this will allow to regroup image builds under\nthe same iteration. So it could be for example a git sha.</p>"
                      },
                      "builds": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "title": "<p>ULID</p>"
                            },
                            "iteration_id": {
                              "type": "string",
                              "title": "<p>ULID of the iteration</p>"
                            },
                            "component_type": {
                              "type": "string",
                              "title": "<p>builder or post-processor used to build this</p>"
                            },
                            "packer_run_uuid": {
                              "type": "string"
                            },
                            "images": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "title": "<p>ULID for the image</p>"
                                  },
                                  "image_id": {
                                    "type": "string",
                                    "description": "<p>ID or URL of the remote cloud image as given by a build.</p>"
                                  },
                                  "region": {
                                    "type": "string",
                                    "title": "<p>region as given by <code>packer build</code>. eg. \"ap-east-1\"</p>"
                                  },
                                  "created_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "title": "<p>Timestamp at which this image was created</p>"
                                  }
                                },
                                "description": "Represents the actual region:image_id mapping for a single image, in a\nsingle build."
                              }
                            },
                            "cloud_provider": {
                              "type": "string",
                              "title": "<p>aws</p>"
                            },
                            "status": {
                              "title": "<p>complete</p>",
                              "type": "string",
                              "enum": [
                                "UNSET",
                                "RUNNING",
                                "DONE",
                                "CANCELLED",
                                "FAILED"
                              ],
                              "default": "UNSET"
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "updated_at": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "labels": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              },
                              "title": "<p>unstructured metadata</p>"
                            }
                          }
                        },
                        "title": "<p>link to set of builds for an image iteration</p>"
                      }
                    },
                    "title": "image iterations messages"
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                },
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "<p>A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n<code>path/google.protobuf.Duration</code>). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).</p>\n<p>In practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme <code>http</code>, <code>https</code>, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:</p>\n<ul>\n<li>If no scheme is provided, <code>https</code> is assumed.</li>\n<li>An HTTP GET on the URL must yield a [google.protobuf.Type][]\nvalue in binary format, or produce an error.</li>\n<li>Applications are allowed to cache lookup results based on the\nURL, or have them precompiled into a binary to avoid any\nlookup. Therefore, binary compatibility needs to be preserved\non changes to types. (Use versioned type names to manage\nbreaking changes.)</li>\n</ul>\n<p>Note: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.</p>\n<p>Schemes other than <code>http</code>, <code>https</code> (or the empty scheme) might be\nused with implementation specific semantics.</p>"
                      },
                      "value": {
                        "type": "string",
                        "format": "byte",
                        "description": "<p>Must be a valid serialized protocol buffer of the above specified type.</p>"
                      }
                    },
                    "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "<p>organization_id is the id of the organization.</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "<p>project_id is the projects id.</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket_slug",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "incremental_version",
            "description": "<p>may need to replace with image iteration id</p>",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "location.region.provider",
            "description": "<p>provider is the named cloud provider (\"aws\", \"gcp\", \"azure\").</p>",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "location.region.region",
            "description": "<p>region is the cloud region (\"us-west1\", \"us-east1\").</p>",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": ["PackerService"]
      }
    },
    "/packer/2021-04-30/organizations/{location.organization_id}/projects/{location.project_id}/images/{bucket_slug}/iterations/{iteration_id}/builds": {
      "get": {
        "operationId": "BuildService_ListBuilds",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "location": {
                  "type": "object",
                  "properties": {
                    "organization_id": {
                      "type": "string",
                      "description": "<p>organization_id is the id of the organization.</p>"
                    },
                    "project_id": {
                      "type": "string",
                      "description": "<p>project_id is the projects id.</p>"
                    },
                    "region": {
                      "description": "<p>region is the region that the resource is located in. It is\noptional if the object being referenced is a global object.</p>",
                      "type": "object",
                      "properties": {
                        "provider": {
                          "type": "string",
                          "title": "<p>provider is the named cloud provider (\"aws\", \"gcp\", \"azure\")</p>"
                        },
                        "region": {
                          "type": "string",
                          "title": "<p>region is the cloud region (\"us-west1\", \"us-east1\")</p>"
                        }
                      }
                    }
                  }
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "<p>This token allows you to get the next page of results for list requests.\nIf the number of results is larger than <code>page_size</code>, use the\n<code>next_page_token</code> as a value for the query parameter <code>next_page_token</code> in\nthe next request. The value will become empty when there are no more pages.</p>"
                    },
                    "previous_page_token": {
                      "type": "string",
                      "description": "<p>This token allows you to get the previous page of results for list\nrequests. If the number of results is larger than <code>page_size</code>, use the\n<code>previous_page_token</code> as a value for the query parameter\n<code>previous_page_token</code> in the next request. The value will become empty when\nthere are no more pages.</p>"
                    }
                  }
                },
                "builds": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "<p>ULID</p>"
                      },
                      "iteration_id": {
                        "type": "string",
                        "title": "<p>ULID of the iteration</p>"
                      },
                      "component_type": {
                        "type": "string",
                        "title": "<p>builder or post-processor used to build this</p>"
                      },
                      "packer_run_uuid": {
                        "type": "string"
                      },
                      "images": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "title": "<p>ULID for the image</p>"
                            },
                            "image_id": {
                              "type": "string",
                              "description": "<p>ID or URL of the remote cloud image as given by a build.</p>"
                            },
                            "region": {
                              "type": "string",
                              "title": "<p>region as given by <code>packer build</code>. eg. \"ap-east-1\"</p>"
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "<p>Timestamp at which this image was created</p>"
                            }
                          },
                          "description": "Represents the actual region:image_id mapping for a single image, in a\nsingle build."
                        }
                      },
                      "cloud_provider": {
                        "type": "string",
                        "title": "<p>aws</p>"
                      },
                      "status": {
                        "title": "<p>complete</p>",
                        "type": "string",
                        "enum": [
                          "UNSET",
                          "RUNNING",
                          "DONE",
                          "CANCELLED",
                          "FAILED"
                        ],
                        "default": "UNSET"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "labels": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "title": "<p>unstructured metadata</p>"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                },
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "<p>A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n<code>path/google.protobuf.Duration</code>). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).</p>\n<p>In practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme <code>http</code>, <code>https</code>, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:</p>\n<ul>\n<li>If no scheme is provided, <code>https</code> is assumed.</li>\n<li>An HTTP GET on the URL must yield a [google.protobuf.Type][]\nvalue in binary format, or produce an error.</li>\n<li>Applications are allowed to cache lookup results based on the\nURL, or have them precompiled into a binary to avoid any\nlookup. Therefore, binary compatibility needs to be preserved\non changes to types. (Use versioned type names to manage\nbreaking changes.)</li>\n</ul>\n<p>Note: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.</p>\n<p>Schemes other than <code>http</code>, <code>https</code> (or the empty scheme) might be\nused with implementation specific semantics.</p>"
                      },
                      "value": {
                        "type": "string",
                        "format": "byte",
                        "description": "<p>Must be a valid serialized protocol buffer of the above specified type.</p>"
                      }
                    },
                    "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "<p>organization_id is the id of the organization.</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "<p>project_id is the projects id.</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket_slug",
            "description": "<p>bucket info</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "iteration_id",
            "description": "<p>iteration info</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.region.provider",
            "description": "<p>provider is the named cloud provider (\"aws\", \"gcp\", \"azure\").</p>",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "location.region.region",
            "description": "<p>region is the cloud region (\"us-west1\", \"us-east1\").</p>",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.page_size",
            "description": "<p>The max number of results per page that should be returned. If the number\nof available results is larger than <code>page_size</code>, a <code>next_page_token</code> is\nreturned which can be used to get the next page of results in subsequent\nrequests. A value of zero will cause <code>page_size</code> to be defaulted.</p>",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "pagination.next_page_token",
            "description": "<p>Specifies a page token to use to retrieve the next page. Set this to the\n<code>next_page_token</code> returned by previous list requests to get the next page of\nresults. If set, <code>previous_page_token</code> must not be set.</p>",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.previous_page_token",
            "description": "<p>Specifies a page token to use to retrieve the previous page. Set this to\nthe <code>previous_page_token</code> returned by previous list requests to get the\nprevious page of results. If set, <code>next_page_token</code> must not be set.</p>",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sorting.order_by",
            "description": "<p>Specifies the list of per field ordering that should be used for sorting.\nThe order matters as rows are sorted in order by fields and when the field\nmatches, the next field is used to tie break the ordering.\nThe per field default ordering is ascending.</p>\n<p>The fields should be immutabile, unique, and orderable. If the field is\nnot unique, more than one sort fields should be passed.</p>\n<p>Example: oder_by=name,age desc,created_at asc\nIn that case, 'name' will get the default 'ascending' order.</p>",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": ["PackerService"]
      }
    },
    "/packer/2021-04-30/organizations/{location.organization_id}/projects/{location.project_id}/iterations/{iteration_id}": {
      "delete": {
        "operationId": "IterationService_DeleteIteration",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                },
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "<p>A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n<code>path/google.protobuf.Duration</code>). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).</p>\n<p>In practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme <code>http</code>, <code>https</code>, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:</p>\n<ul>\n<li>If no scheme is provided, <code>https</code> is assumed.</li>\n<li>An HTTP GET on the URL must yield a [google.protobuf.Type][]\nvalue in binary format, or produce an error.</li>\n<li>Applications are allowed to cache lookup results based on the\nURL, or have them precompiled into a binary to avoid any\nlookup. Therefore, binary compatibility needs to be preserved\non changes to types. (Use versioned type names to manage\nbreaking changes.)</li>\n</ul>\n<p>Note: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.</p>\n<p>Schemes other than <code>http</code>, <code>https</code> (or the empty scheme) might be\nused with implementation specific semantics.</p>"
                      },
                      "value": {
                        "type": "string",
                        "format": "byte",
                        "description": "<p>Must be a valid serialized protocol buffer of the above specified type.</p>"
                      }
                    },
                    "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "<p>organization_id is the id of the organization.</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "<p>project_id is the projects id.</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "iteration_id",
            "description": "<p>id of the iteration you would like to delete</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.region.provider",
            "description": "<p>provider is the named cloud provider (\"aws\", \"gcp\", \"azure\").</p>",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "location.region.region",
            "description": "<p>region is the cloud region (\"us-west1\", \"us-east1\").</p>",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bucket_slug",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": ["PackerService"]
      },
      "patch": {
        "summary": "<p>Only used to set incremental_version once all builds are complete.\nOtherwise, UpdateBuild is used for specific build updates.</p>",
        "operationId": "IterationService_UpdateIteration",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "iteration": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "<p>ULID</p>"
                    },
                    "bucket_slug": {
                      "type": "string",
                      "title": "<p>same bucket_slug as in the Bucket object</p>"
                    },
                    "iteration_ancestor_id": {
                      "type": "string",
                      "title": "<p>what image was used as source</p>"
                    },
                    "incremental_version": {
                      "type": "integer",
                      "format": "int32",
                      "title": "<p>e.g 15</p>"
                    },
                    "complete": {
                      "type": "boolean",
                      "description": "<p>If true, this iteration is considered \"ready to use\" and will be\nreturned even if the include_incomplete flage is \"false\" in the\nlist iterations request.</p>"
                    },
                    "author_id": {
                      "type": "string",
                      "title": "<p>who created the iteration</p>"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "<p>when iteration was created or updated</p>"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "fingerprint": {
                      "type": "string",
                      "description": "<p>fingerprint of the build; this will allow to regroup image builds under\nthe same iteration. So it could be for example a git sha.</p>"
                    },
                    "builds": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "<p>ULID</p>"
                          },
                          "iteration_id": {
                            "type": "string",
                            "title": "<p>ULID of the iteration</p>"
                          },
                          "component_type": {
                            "type": "string",
                            "title": "<p>builder or post-processor used to build this</p>"
                          },
                          "packer_run_uuid": {
                            "type": "string"
                          },
                          "images": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "title": "<p>ULID for the image</p>"
                                },
                                "image_id": {
                                  "type": "string",
                                  "description": "<p>ID or URL of the remote cloud image as given by a build.</p>"
                                },
                                "region": {
                                  "type": "string",
                                  "title": "<p>region as given by <code>packer build</code>. eg. \"ap-east-1\"</p>"
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "title": "<p>Timestamp at which this image was created</p>"
                                }
                              },
                              "description": "Represents the actual region:image_id mapping for a single image, in a\nsingle build."
                            }
                          },
                          "cloud_provider": {
                            "type": "string",
                            "title": "<p>aws</p>"
                          },
                          "status": {
                            "title": "<p>complete</p>",
                            "type": "string",
                            "enum": [
                              "UNSET",
                              "RUNNING",
                              "DONE",
                              "CANCELLED",
                              "FAILED"
                            ],
                            "default": "UNSET"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "labels": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "title": "<p>unstructured metadata</p>"
                          }
                        }
                      },
                      "title": "<p>link to set of builds for an image iteration</p>"
                    }
                  },
                  "title": "image iterations messages"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                },
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "<p>A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n<code>path/google.protobuf.Duration</code>). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).</p>\n<p>In practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme <code>http</code>, <code>https</code>, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:</p>\n<ul>\n<li>If no scheme is provided, <code>https</code> is assumed.</li>\n<li>An HTTP GET on the URL must yield a [google.protobuf.Type][]\nvalue in binary format, or produce an error.</li>\n<li>Applications are allowed to cache lookup results based on the\nURL, or have them precompiled into a binary to avoid any\nlookup. Therefore, binary compatibility needs to be preserved\non changes to types. (Use versioned type names to manage\nbreaking changes.)</li>\n</ul>\n<p>Note: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.</p>\n<p>Schemes other than <code>http</code>, <code>https</code> (or the empty scheme) might be\nused with implementation specific semantics.</p>"
                      },
                      "value": {
                        "type": "string",
                        "format": "byte",
                        "description": "<p>Must be a valid serialized protocol buffer of the above specified type.</p>"
                      }
                    },
                    "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "<p>organization_id is the id of the organization.</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "<p>project_id is the projects id.</p>",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "iteration_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "location": {
                  "type": "object",
                  "properties": {
                    "organization_id": {
                      "type": "string",
                      "description": "<p>organization_id is the id of the organization.</p>"
                    },
                    "project_id": {
                      "type": "string",
                      "description": "<p>project_id is the projects id.</p>"
                    },
                    "region": {
                      "description": "<p>region is the region that the resource is located in. It is\noptional if the object being referenced is a global object.</p>",
                      "type": "object",
                      "properties": {
                        "provider": {
                          "type": "string",
                          "title": "<p>provider is the named cloud provider (\"aws\", \"gcp\", \"azure\")</p>"
                        },
                        "region": {
                          "type": "string",
                          "title": "<p>region is the cloud region (\"us-west1\", \"us-east1\")</p>"
                        }
                      }
                    }
                  }
                },
                "bucket_slug": {
                  "type": "string"
                },
                "iteration_id": {
                  "type": "string"
                },
                "complete": {
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "tags": ["PackerService"]
      }
    }
  },
  "definitions": {
    "google.protobuf.Any": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string",
          "description": "<p>A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n<code>path/google.protobuf.Duration</code>). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).</p>\n<p>In practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme <code>http</code>, <code>https</code>, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:</p>\n<ul>\n<li>If no scheme is provided, <code>https</code> is assumed.</li>\n<li>An HTTP GET on the URL must yield a [google.protobuf.Type][]\nvalue in binary format, or produce an error.</li>\n<li>Applications are allowed to cache lookup results based on the\nURL, or have them precompiled into a binary to avoid any\nlookup. Therefore, binary compatibility needs to be preserved\non changes to types. (Use versioned type names to manage\nbreaking changes.)</li>\n</ul>\n<p>Note: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.</p>\n<p>Schemes other than <code>http</code>, <code>https</code> (or the empty scheme) might be\nused with implementation specific semantics.</p>"
        },
        "value": {
          "type": "string",
          "format": "byte",
          "description": "<p>Must be a valid serialized protocol buffer of the above specified type.</p>"
        }
      },
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "grpc.gateway.runtime.Error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "type_url": {
                "type": "string",
                "description": "<p>A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n<code>path/google.protobuf.Duration</code>). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).</p>\n<p>In practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme <code>http</code>, <code>https</code>, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:</p>\n<ul>\n<li>If no scheme is provided, <code>https</code> is assumed.</li>\n<li>An HTTP GET on the URL must yield a [google.protobuf.Type][]\nvalue in binary format, or produce an error.</li>\n<li>Applications are allowed to cache lookup results based on the\nURL, or have them precompiled into a binary to avoid any\nlookup. Therefore, binary compatibility needs to be preserved\non changes to types. (Use versioned type names to manage\nbreaking changes.)</li>\n</ul>\n<p>Note: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.</p>\n<p>Schemes other than <code>http</code>, <code>https</code> (or the empty scheme) might be\nused with implementation specific semantics.</p>"
              },
              "value": {
                "type": "string",
                "format": "byte",
                "description": "<p>Must be a valid serialized protocol buffer of the above specified type.</p>"
              }
            },
            "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
          }
        }
      }
    },
    "hashicorp.cloud.common.PaginationRequest": {
      "type": "object",
      "properties": {
        "page_size": {
          "type": "integer",
          "format": "int64",
          "description": "<p>The max number of results per page that should be returned. If the number\nof available results is larger than <code>page_size</code>, a <code>next_page_token</code> is\nreturned which can be used to get the next page of results in subsequent\nrequests. A value of zero will cause <code>page_size</code> to be defaulted.</p>"
        },
        "next_page_token": {
          "type": "string",
          "description": "<p>Specifies a page token to use to retrieve the next page. Set this to the\n<code>next_page_token</code> returned by previous list requests to get the next page of\nresults. If set, <code>previous_page_token</code> must not be set.</p>"
        },
        "previous_page_token": {
          "type": "string",
          "description": "<p>Specifies a page token to use to retrieve the previous page. Set this to\nthe <code>previous_page_token</code> returned by previous list requests to get the\nprevious page of results. If set, <code>next_page_token</code> must not be set.</p>"
        }
      },
      "description": "PaginationRequest are the parameters for a paginated list request."
    },
    "hashicorp.cloud.common.PaginationResponse": {
      "type": "object",
      "properties": {
        "next_page_token": {
          "type": "string",
          "description": "<p>This token allows you to get the next page of results for list requests.\nIf the number of results is larger than <code>page_size</code>, use the\n<code>next_page_token</code> as a value for the query parameter <code>next_page_token</code> in\nthe next request. The value will become empty when there are no more pages.</p>"
        },
        "previous_page_token": {
          "type": "string",
          "description": "<p>This token allows you to get the previous page of results for list\nrequests. If the number of results is larger than <code>page_size</code>, use the\n<code>previous_page_token</code> as a value for the query parameter\n<code>previous_page_token</code> in the next request. The value will become empty when\nthere are no more pages.</p>"
        }
      },
      "description": "PaginationResponse is the response holding the page tokens for a paginated\nlist response."
    },
    "hashicorp.cloud.common.SortingRequest": {
      "type": "object",
      "properties": {
        "order_by": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "<p>Specifies the list of per field ordering that should be used for sorting.\nThe order matters as rows are sorted in order by fields and when the field\nmatches, the next field is used to tie break the ordering.\nThe per field default ordering is ascending.</p>\n<p>The fields should be immutabile, unique, and orderable. If the field is\nnot unique, more than one sort fields should be passed.</p>\n<p>Example: oder_by=name,age desc,created_at asc\nIn that case, 'name' will get the default 'ascending' order.</p>"
        }
      },
      "description": "SortingRequest are the parameters for a sorted list request."
    },
    "hashicorp.cloud.location.Location": {
      "type": "object",
      "properties": {
        "organization_id": {
          "type": "string",
          "description": "<p>organization_id is the id of the organization.</p>"
        },
        "project_id": {
          "type": "string",
          "description": "<p>project_id is the projects id.</p>"
        },
        "region": {
          "description": "<p>region is the region that the resource is located in. It is\noptional if the object being referenced is a global object.</p>",
          "type": "object",
          "properties": {
            "provider": {
              "type": "string",
              "title": "<p>provider is the named cloud provider (\"aws\", \"gcp\", \"azure\")</p>"
            },
            "region": {
              "type": "string",
              "title": "<p>region is the cloud region (\"us-west1\", \"us-east1\")</p>"
            }
          }
        }
      },
      "description": "Location represents a target for an operation in HCP."
    },
    "hashicorp.cloud.location.Region": {
      "type": "object",
      "properties": {
        "provider": {
          "type": "string",
          "title": "<p>provider is the named cloud provider (\"aws\", \"gcp\", \"azure\")</p>"
        },
        "region": {
          "type": "string",
          "title": "<p>region is the cloud region (\"us-west1\", \"us-east1\")</p>"
        }
      },
      "description": "Region identifies a Cloud data-plane region."
    },
    "hashicorp.cloud.packer.Bucket": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "<p>ULID</p>"
        },
        "slug": {
          "type": "string",
          "title": "<p>base-ubuntu-18-secure</p>"
        },
        "location": {
          "type": "object",
          "properties": {
            "organization_id": {
              "type": "string",
              "description": "<p>organization_id is the id of the organization.</p>"
            },
            "project_id": {
              "type": "string",
              "description": "<p>project_id is the projects id.</p>"
            },
            "region": {
              "description": "<p>region is the region that the resource is located in. It is\noptional if the object being referenced is a global object.</p>",
              "type": "object",
              "properties": {
                "provider": {
                  "type": "string",
                  "title": "<p>provider is the named cloud provider (\"aws\", \"gcp\", \"azure\")</p>"
                },
                "region": {
                  "type": "string",
                  "title": "<p>region is the cloud region (\"us-west1\", \"us-east1\")</p>"
                }
              }
            }
          }
        },
        "latest_iteration": {
          "title": "<p>latest iteration regardless of completion status</p>",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "title": "<p>ULID</p>"
            },
            "bucket_slug": {
              "type": "string",
              "title": "<p>same bucket_slug as in the Bucket object</p>"
            },
            "iteration_ancestor_id": {
              "type": "string",
              "title": "<p>what image was used as source</p>"
            },
            "incremental_version": {
              "type": "integer",
              "format": "int32",
              "title": "<p>e.g 15</p>"
            },
            "complete": {
              "type": "boolean",
              "description": "<p>If true, this iteration is considered \"ready to use\" and will be\nreturned even if the include_incomplete flage is \"false\" in the\nlist iterations request.</p>"
            },
            "author_id": {
              "type": "string",
              "title": "<p>who created the iteration</p>"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "title": "<p>when iteration was created or updated</p>"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time"
            },
            "fingerprint": {
              "type": "string",
              "description": "<p>fingerprint of the build; this will allow to regroup image builds under\nthe same iteration. So it could be for example a git sha.</p>"
            },
            "builds": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "title": "<p>ULID</p>"
                  },
                  "iteration_id": {
                    "type": "string",
                    "title": "<p>ULID of the iteration</p>"
                  },
                  "component_type": {
                    "type": "string",
                    "title": "<p>builder or post-processor used to build this</p>"
                  },
                  "packer_run_uuid": {
                    "type": "string"
                  },
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "title": "<p>ULID for the image</p>"
                        },
                        "image_id": {
                          "type": "string",
                          "description": "<p>ID or URL of the remote cloud image as given by a build.</p>"
                        },
                        "region": {
                          "type": "string",
                          "title": "<p>region as given by <code>packer build</code>. eg. \"ap-east-1\"</p>"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "<p>Timestamp at which this image was created</p>"
                        }
                      },
                      "description": "Represents the actual region:image_id mapping for a single image, in a\nsingle build."
                    }
                  },
                  "cloud_provider": {
                    "type": "string",
                    "title": "<p>aws</p>"
                  },
                  "status": {
                    "title": "<p>complete</p>",
                    "type": "string",
                    "enum": ["UNSET", "RUNNING", "DONE", "CANCELLED", "FAILED"],
                    "default": "UNSET"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "labels": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "title": "<p>unstructured metadata</p>"
                  }
                }
              },
              "title": "<p>link to set of builds for an image iteration</p>"
            }
          }
        },
        "latest_version": {
          "type": "integer",
          "format": "int32",
          "title": "<p>latest completed version</p>"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "platforms": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "<p>[\"aws\", \"gcp\"]</p>"
        },
        "description": {
          "type": "string",
          "title": "<p>\"This image is a hardened platform for other teams\"</p>"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "<p>Slot for unstructured metadata tags\nfor example {\"repo\": \"https://github.com/hashicorp/common\"}</p>"
        },
        "iteration_count": {
          "type": "string",
          "format": "int64",
          "description": "<p>number of total iterations (not just versions), for UI.</p>"
        }
      }
    },
    "hashicorp.cloud.packer.Build": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "<p>ULID</p>"
        },
        "iteration_id": {
          "type": "string",
          "title": "<p>ULID of the iteration</p>"
        },
        "component_type": {
          "type": "string",
          "title": "<p>builder or post-processor used to build this</p>"
        },
        "packer_run_uuid": {
          "type": "string"
        },
        "images": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "title": "<p>ULID for the image</p>"
              },
              "image_id": {
                "type": "string",
                "description": "<p>ID or URL of the remote cloud image as given by a build.</p>"
              },
              "region": {
                "type": "string",
                "title": "<p>region as given by <code>packer build</code>. eg. \"ap-east-1\"</p>"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "<p>Timestamp at which this image was created</p>"
              }
            },
            "description": "Represents the actual region:image_id mapping for a single image, in a\nsingle build."
          }
        },
        "cloud_provider": {
          "type": "string",
          "title": "<p>aws</p>"
        },
        "status": {
          "title": "<p>complete</p>",
          "type": "string",
          "enum": ["UNSET", "RUNNING", "DONE", "CANCELLED", "FAILED"],
          "default": "UNSET"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "<p>unstructured metadata</p>"
        }
      }
    },
    "hashicorp.cloud.packer.BuildStatus": {
      "type": "string",
      "enum": ["UNSET", "RUNNING", "DONE", "CANCELLED", "FAILED"],
      "default": "UNSET",
      "title": "- UNSET: UNSET is a sentinel zero value so that an uninitialized value can be\ndetected.\n - RUNNING: Running means the Packer build is currently running\n - DONE: Done means the Packer build has finished successfully\n - CANCELLED: Cancelled means the Packer build was cancelled by a user\n - FAILED: Failed means the Packer build and therefore iteration creation failed"
    },
    "hashicorp.cloud.packer.BuildUpdates": {
      "type": "object",
      "properties": {
        "status": {
          "title": "<p>Running, Done, Failed</p>",
          "type": "string",
          "enum": ["UNSET", "RUNNING", "DONE", "CANCELLED", "FAILED"],
          "default": "UNSET"
        },
        "cloud_provider": {
          "type": "string",
          "description": "<p>aws, gcp, etc.</p>"
        },
        "packer_run_uuid": {
          "type": "string",
          "description": "<p>Packer build run UUID can change because we may be updating a build that\npreviously failed.</p>"
        },
        "images": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "title": "<p>ULID for the image</p>"
              },
              "image_id": {
                "type": "string",
                "description": "<p>ID or URL of the remote cloud image as given by a build.</p>"
              },
              "region": {
                "type": "string",
                "title": "<p>region as given by <code>packer build</code>. eg. \"ap-east-1\"</p>"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "<p>Timestamp at which this image was created</p>"
              }
            },
            "description": "Represents the actual region:image_id mapping for a single image, in a\nsingle build."
          },
          "description": "<p>The length of this list determines how many\nrows this combination of iteration_id and builder_type have in the\nbuild table.</p>"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "<p>Labels to add to the build.</p>"
        }
      },
      "description": "BuildUpdates is used to group the elements of a Build that are\nallowed to be updated after the build has been created. It is part of the\nUpdateBuildRequest."
    },
    "hashicorp.cloud.packer.Channel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "<p>ULID of this chanel</p>"
        },
        "slug": {
          "type": "string",
          "title": "<p>Something like \"production-stable\"</p>"
        },
        "bucket_slug": {
          "type": "string",
          "title": "<p>image bucket this belongs to</p>"
        },
        "author_id": {
          "type": "string",
          "title": "<p>The author who created the channel</p>"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "<p>timestamp this channel was created at</p>"
        },
        "revoked_at": {
          "type": "string",
          "format": "date-time",
          "title": "<p>timestamp this channel was revoked at</p>"
        },
        "revocation_message": {
          "type": "string",
          "title": "<p>message with the reason of why this channel was revoked</p>"
        },
        "pointer": {
          "title": "<p>The channel pointer to the iteration</p>",
          "type": "object",
          "properties": {
            "iteration": {
              "title": "<p>The iteration the channel is pointing to</p>",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "<p>ULID</p>"
                },
                "bucket_slug": {
                  "type": "string",
                  "title": "<p>same bucket_slug as in the Bucket object</p>"
                },
                "iteration_ancestor_id": {
                  "type": "string",
                  "title": "<p>what image was used as source</p>"
                },
                "incremental_version": {
                  "type": "integer",
                  "format": "int32",
                  "title": "<p>e.g 15</p>"
                },
                "complete": {
                  "type": "boolean",
                  "description": "<p>If true, this iteration is considered \"ready to use\" and will be\nreturned even if the include_incomplete flage is \"false\" in the\nlist iterations request.</p>"
                },
                "author_id": {
                  "type": "string",
                  "title": "<p>who created the iteration</p>"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "<p>when iteration was created or updated</p>"
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time"
                },
                "fingerprint": {
                  "type": "string",
                  "description": "<p>fingerprint of the build; this will allow to regroup image builds under\nthe same iteration. So it could be for example a git sha.</p>"
                },
                "builds": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "<p>ULID</p>"
                      },
                      "iteration_id": {
                        "type": "string",
                        "title": "<p>ULID of the iteration</p>"
                      },
                      "component_type": {
                        "type": "string",
                        "title": "<p>builder or post-processor used to build this</p>"
                      },
                      "packer_run_uuid": {
                        "type": "string"
                      },
                      "images": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "title": "<p>ULID for the image</p>"
                            },
                            "image_id": {
                              "type": "string",
                              "description": "<p>ID or URL of the remote cloud image as given by a build.</p>"
                            },
                            "region": {
                              "type": "string",
                              "title": "<p>region as given by <code>packer build</code>. eg. \"ap-east-1\"</p>"
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "<p>Timestamp at which this image was created</p>"
                            }
                          },
                          "description": "Represents the actual region:image_id mapping for a single image, in a\nsingle build."
                        }
                      },
                      "cloud_provider": {
                        "type": "string",
                        "title": "<p>aws</p>"
                      },
                      "status": {
                        "title": "<p>complete</p>",
                        "type": "string",
                        "enum": [
                          "UNSET",
                          "RUNNING",
                          "DONE",
                          "CANCELLED",
                          "FAILED"
                        ],
                        "default": "UNSET"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "labels": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "title": "<p>unstructured metadata</p>"
                      }
                    }
                  },
                  "title": "<p>link to set of builds for an image iteration</p>"
                }
              }
            },
            "author_id": {
              "type": "string",
              "title": "<p>The author who pointed the channel to the iteration</p>"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "title": "<p>timestamp this channel pointer was created at</p>"
            }
          }
        }
      }
    },
    "hashicorp.cloud.packer.ChannelIterationPointer": {
      "type": "object",
      "properties": {
        "iteration": {
          "title": "<p>The iteration the channel is pointing to</p>",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "title": "<p>ULID</p>"
            },
            "bucket_slug": {
              "type": "string",
              "title": "<p>same bucket_slug as in the Bucket object</p>"
            },
            "iteration_ancestor_id": {
              "type": "string",
              "title": "<p>what image was used as source</p>"
            },
            "incremental_version": {
              "type": "integer",
              "format": "int32",
              "title": "<p>e.g 15</p>"
            },
            "complete": {
              "type": "boolean",
              "description": "<p>If true, this iteration is considered \"ready to use\" and will be\nreturned even if the include_incomplete flage is \"false\" in the\nlist iterations request.</p>"
            },
            "author_id": {
              "type": "string",
              "title": "<p>who created the iteration</p>"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "title": "<p>when iteration was created or updated</p>"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time"
            },
            "fingerprint": {
              "type": "string",
              "description": "<p>fingerprint of the build; this will allow to regroup image builds under\nthe same iteration. So it could be for example a git sha.</p>"
            },
            "builds": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "title": "<p>ULID</p>"
                  },
                  "iteration_id": {
                    "type": "string",
                    "title": "<p>ULID of the iteration</p>"
                  },
                  "component_type": {
                    "type": "string",
                    "title": "<p>builder or post-processor used to build this</p>"
                  },
                  "packer_run_uuid": {
                    "type": "string"
                  },
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "title": "<p>ULID for the image</p>"
                        },
                        "image_id": {
                          "type": "string",
                          "description": "<p>ID or URL of the remote cloud image as given by a build.</p>"
                        },
                        "region": {
                          "type": "string",
                          "title": "<p>region as given by <code>packer build</code>. eg. \"ap-east-1\"</p>"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "<p>Timestamp at which this image was created</p>"
                        }
                      },
                      "description": "Represents the actual region:image_id mapping for a single image, in a\nsingle build."
                    }
                  },
                  "cloud_provider": {
                    "type": "string",
                    "title": "<p>aws</p>"
                  },
                  "status": {
                    "title": "<p>complete</p>",
                    "type": "string",
                    "enum": ["UNSET", "RUNNING", "DONE", "CANCELLED", "FAILED"],
                    "default": "UNSET"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "labels": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "title": "<p>unstructured metadata</p>"
                  }
                }
              },
              "title": "<p>link to set of builds for an image iteration</p>"
            }
          }
        },
        "author_id": {
          "type": "string",
          "title": "<p>The author who pointed the channel to the iteration</p>"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "<p>timestamp this channel pointer was created at</p>"
        }
      },
      "title": "The information about a channel pointer to a iteration"
    },
    "hashicorp.cloud.packer.CreateBucketRequest": {
      "type": "object",
      "properties": {
        "bucket_slug": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "object",
          "properties": {
            "organization_id": {
              "type": "string",
              "description": "<p>organization_id is the id of the organization.</p>"
            },
            "project_id": {
              "type": "string",
              "description": "<p>project_id is the projects id.</p>"
            },
            "region": {
              "description": "<p>region is the region that the resource is located in. It is\noptional if the object being referenced is a global object.</p>",
              "type": "object",
              "properties": {
                "provider": {
                  "type": "string",
                  "title": "<p>provider is the named cloud provider (\"aws\", \"gcp\", \"azure\")</p>"
                },
                "region": {
                  "type": "string",
                  "title": "<p>region is the cloud region (\"us-west1\", \"us-east1\")</p>"
                }
              }
            }
          }
        }
      }
    },
    "hashicorp.cloud.packer.CreateBucketResponse": {
      "type": "object",
      "properties": {
        "bucket": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "title": "<p>ULID</p>"
            },
            "slug": {
              "type": "string",
              "title": "<p>base-ubuntu-18-secure</p>"
            },
            "location": {
              "type": "object",
              "properties": {
                "organization_id": {
                  "type": "string",
                  "description": "<p>organization_id is the id of the organization.</p>"
                },
                "project_id": {
                  "type": "string",
                  "description": "<p>project_id is the projects id.</p>"
                },
                "region": {
                  "description": "<p>region is the region that the resource is located in. It is\noptional if the object being referenced is a global object.</p>",
                  "type": "object",
                  "properties": {
                    "provider": {
                      "type": "string",
                      "title": "<p>provider is the named cloud provider (\"aws\", \"gcp\", \"azure\")</p>"
                    },
                    "region": {
                      "type": "string",
                      "title": "<p>region is the cloud region (\"us-west1\", \"us-east1\")</p>"
                    }
                  }
                }
              }
            },
            "latest_iteration": {
              "title": "<p>latest iteration regardless of completion status</p>",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "<p>ULID</p>"
                },
                "bucket_slug": {
                  "type": "string",
                  "title": "<p>same bucket_slug as in the Bucket object</p>"
                },
                "iteration_ancestor_id": {
                  "type": "string",
                  "title": "<p>what image was used as source</p>"
                },
                "incremental_version": {
                  "type": "integer",
                  "format": "int32",
                  "title": "<p>e.g 15</p>"
                },
                "complete": {
                  "type": "boolean",
                  "description": "<p>If true, this iteration is considered \"ready to use\" and will be\nreturned even if the include_incomplete flage is \"false\" in the\nlist iterations request.</p>"
                },
                "author_id": {
                  "type": "string",
                  "title": "<p>who created the iteration</p>"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "<p>when iteration was created or updated</p>"
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time"
                },
                "fingerprint": {
                  "type": "string",
                  "description": "<p>fingerprint of the build; this will allow to regroup image builds under\nthe same iteration. So it could be for example a git sha.</p>"
                },
                "builds": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "<p>ULID</p>"
                      },
                      "iteration_id": {
                        "type": "string",
                        "title": "<p>ULID of the iteration</p>"
                      },
                      "component_type": {
                        "type": "string",
                        "title": "<p>builder or post-processor used to build this</p>"
                      },
                      "packer_run_uuid": {
                        "type": "string"
                      },
                      "images": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "title": "<p>ULID for the image</p>"
                            },
                            "image_id": {
                              "type": "string",
                              "description": "<p>ID or URL of the remote cloud image as given by a build.</p>"
                            },
                            "region": {
                              "type": "string",
                              "title": "<p>region as given by <code>packer build</code>. eg. \"ap-east-1\"</p>"
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "<p>Timestamp at which this image was created</p>"
                            }
                          },
                          "description": "Represents the actual region:image_id mapping for a single image, in a\nsingle build."
                        }
                      },
                      "cloud_provider": {
                        "type": "string",
                        "title": "<p>aws</p>"
                      },
                      "status": {
                        "title": "<p>complete</p>",
                        "type": "string",
                        "enum": [
                          "UNSET",
                          "RUNNING",
                          "DONE",
                          "CANCELLED",
                          "FAILED"
                        ],
                        "default": "UNSET"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "labels": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "title": "<p>unstructured metadata</p>"
                      }
                    }
                  },
                  "title": "<p>link to set of builds for an image iteration</p>"
                }
              }
            },
            "latest_version": {
              "type": "integer",
              "format": "int32",
              "title": "<p>latest completed version</p>"
            },
            "created_at": {
              "type": "string",
              "format": "date-time"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time"
            },
            "platforms": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "<p>[\"aws\", \"gcp\"]</p>"
            },
            "description": {
              "type": "string",
              "title": "<p>\"This image is a hardened platform for other teams\"</p>"
            },
            "labels": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "title": "<p>Slot for unstructured metadata tags\nfor example {\"repo\": \"https://github.com/hashicorp/common\"}</p>"
            },
            "iteration_count": {
              "type": "string",
              "format": "int64",
              "description": "<p>number of total iterations (not just versions), for UI.</p>"
            }
          }
        }
      }
    },
    "hashicorp.cloud.packer.CreateBuildRequest": {
      "type": "object",
      "properties": {
        "location": {
          "title": "<p>org and project info</p>",
          "type": "object",
          "properties": {
            "organization_id": {
              "type": "string",
              "description": "<p>organization_id is the id of the organization.</p>"
            },
            "project_id": {
              "type": "string",
              "description": "<p>project_id is the projects id.</p>"
            },
            "region": {
              "description": "<p>region is the region that the resource is located in. It is\noptional if the object being referenced is a global object.</p>",
              "type": "object",
              "properties": {
                "provider": {
                  "type": "string",
                  "title": "<p>provider is the named cloud provider (\"aws\", \"gcp\", \"azure\")</p>"
                },
                "region": {
                  "type": "string",
                  "title": "<p>region is the cloud region (\"us-west1\", \"us-east1\")</p>"
                }
              }
            }
          }
        },
        "bucket_slug": {
          "type": "string",
          "title": "<p>bucket info</p>"
        },
        "build": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "title": "<p>ULID</p>"
            },
            "iteration_id": {
              "type": "string",
              "title": "<p>ULID of the iteration</p>"
            },
            "component_type": {
              "type": "string",
              "title": "<p>builder or post-processor used to build this</p>"
            },
            "packer_run_uuid": {
              "type": "string"
            },
            "images": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "title": "<p>ULID for the image</p>"
                  },
                  "image_id": {
                    "type": "string",
                    "description": "<p>ID or URL of the remote cloud image as given by a build.</p>"
                  },
                  "region": {
                    "type": "string",
                    "title": "<p>region as given by <code>packer build</code>. eg. \"ap-east-1\"</p>"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "<p>Timestamp at which this image was created</p>"
                  }
                },
                "description": "Represents the actual region:image_id mapping for a single image, in a\nsingle build."
              }
            },
            "cloud_provider": {
              "type": "string",
              "title": "<p>aws</p>"
            },
            "status": {
              "title": "<p>complete</p>",
              "type": "string",
              "enum": ["UNSET", "RUNNING", "DONE", "CANCELLED", "FAILED"],
              "default": "UNSET"
            },
            "created_at": {
              "type": "string",
              "format": "date-time"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time"
            },
            "labels": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "title": "<p>unstructured metadata</p>"
            }
          },
          "description": "<p>Custom build info.\nTODO: We may want to make this input object not contain the\nID or ULID, since those are not user-settable.</p>"
        },
        "fingerprint": {
          "type": "string",
          "title": "<p>Git sha to match against nascent iteration</p>"
        }
      }
    },
    "hashicorp.cloud.packer.CreateBuildResponse": {
      "type": "object",
      "properties": {
        "build": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "title": "<p>ULID</p>"
            },
            "iteration_id": {
              "type": "string",
              "title": "<p>ULID of the iteration</p>"
            },
            "component_type": {
              "type": "string",
              "title": "<p>builder or post-processor used to build this</p>"
            },
            "packer_run_uuid": {
              "type": "string"
            },
            "images": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "title": "<p>ULID for the image</p>"
                  },
                  "image_id": {
                    "type": "string",
                    "description": "<p>ID or URL of the remote cloud image as given by a build.</p>"
                  },
                  "region": {
                    "type": "string",
                    "title": "<p>region as given by <code>packer build</code>. eg. \"ap-east-1\"</p>"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "<p>Timestamp at which this image was created</p>"
                  }
                },
                "description": "Represents the actual region:image_id mapping for a single image, in a\nsingle build."
              }
            },
            "cloud_provider": {
              "type": "string",
              "title": "<p>aws</p>"
            },
            "status": {
              "title": "<p>complete</p>",
              "type": "string",
              "enum": ["UNSET", "RUNNING", "DONE", "CANCELLED", "FAILED"],
              "default": "UNSET"
            },
            "created_at": {
              "type": "string",
              "format": "date-time"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time"
            },
            "labels": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "title": "<p>unstructured metadata</p>"
            }
          }
        }
      }
    },
    "hashicorp.cloud.packer.CreateChannelRequest": {
      "type": "object",
      "properties": {
        "slug": {
          "type": "string",
          "description": "<p>Name of this channel, something like \"production\".</p>"
        },
        "bucket_slug": {
          "type": "string",
          "title": "<p>same as in Bucket</p>"
        },
        "incremental_version": {
          "type": "integer",
          "format": "int32"
        },
        "iteration_id": {
          "type": "string"
        },
        "fingerprint": {
          "type": "string"
        },
        "location": {
          "type": "object",
          "properties": {
            "organization_id": {
              "type": "string",
              "description": "<p>organization_id is the id of the organization.</p>"
            },
            "project_id": {
              "type": "string",
              "description": "<p>project_id is the projects id.</p>"
            },
            "region": {
              "description": "<p>region is the region that the resource is located in. It is\noptional if the object being referenced is a global object.</p>",
              "type": "object",
              "properties": {
                "provider": {
                  "type": "string",
                  "title": "<p>provider is the named cloud provider (\"aws\", \"gcp\", \"azure\")</p>"
                },
                "region": {
                  "type": "string",
                  "title": "<p>region is the cloud region (\"us-west1\", \"us-east1\")</p>"
                }
              }
            }
          }
        }
      },
      "title": "Image Channel Messages"
    },
    "hashicorp.cloud.packer.CreateChannelResponse": {
      "type": "object",
      "properties": {
        "channel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "title": "<p>ULID of this chanel</p>"
            },
            "slug": {
              "type": "string",
              "title": "<p>Something like \"production-stable\"</p>"
            },
            "bucket_slug": {
              "type": "string",
              "title": "<p>image bucket this belongs to</p>"
            },
            "author_id": {
              "type": "string",
              "title": "<p>The author who created the channel</p>"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "title": "<p>timestamp this channel was created at</p>"
            },
            "revoked_at": {
              "type": "string",
              "format": "date-time",
              "title": "<p>timestamp this channel was revoked at</p>"
            },
            "revocation_message": {
              "type": "string",
              "title": "<p>message with the reason of why this channel was revoked</p>"
            },
            "pointer": {
              "title": "<p>The channel pointer to the iteration</p>",
              "type": "object",
              "properties": {
                "iteration": {
                  "title": "<p>The iteration the channel is pointing to</p>",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "<p>ULID</p>"
                    },
                    "bucket_slug": {
                      "type": "string",
                      "title": "<p>same bucket_slug as in the Bucket object</p>"
                    },
                    "iteration_ancestor_id": {
                      "type": "string",
                      "title": "<p>what image was used as source</p>"
                    },
                    "incremental_version": {
                      "type": "integer",
                      "format": "int32",
                      "title": "<p>e.g 15</p>"
                    },
                    "complete": {
                      "type": "boolean",
                      "description": "<p>If true, this iteration is considered \"ready to use\" and will be\nreturned even if the include_incomplete flage is \"false\" in the\nlist iterations request.</p>"
                    },
                    "author_id": {
                      "type": "string",
                      "title": "<p>who created the iteration</p>"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "<p>when iteration was created or updated</p>"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "fingerprint": {
                      "type": "string",
                      "description": "<p>fingerprint of the build; this will allow to regroup image builds under\nthe same iteration. So it could be for example a git sha.</p>"
                    },
                    "builds": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "<p>ULID</p>"
                          },
                          "iteration_id": {
                            "type": "string",
                            "title": "<p>ULID of the iteration</p>"
                          },
                          "component_type": {
                            "type": "string",
                            "title": "<p>builder or post-processor used to build this</p>"
                          },
                          "packer_run_uuid": {
                            "type": "string"
                          },
                          "images": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "title": "<p>ULID for the image</p>"
                                },
                                "image_id": {
                                  "type": "string",
                                  "description": "<p>ID or URL of the remote cloud image as given by a build.</p>"
                                },
                                "region": {
                                  "type": "string",
                                  "title": "<p>region as given by <code>packer build</code>. eg. \"ap-east-1\"</p>"
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "title": "<p>Timestamp at which this image was created</p>"
                                }
                              },
                              "description": "Represents the actual region:image_id mapping for a single image, in a\nsingle build."
                            }
                          },
                          "cloud_provider": {
                            "type": "string",
                            "title": "<p>aws</p>"
                          },
                          "status": {
                            "title": "<p>complete</p>",
                            "type": "string",
                            "enum": [
                              "UNSET",
                              "RUNNING",
                              "DONE",
                              "CANCELLED",
                              "FAILED"
                            ],
                            "default": "UNSET"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "labels": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "title": "<p>unstructured metadata</p>"
                          }
                        }
                      },
                      "title": "<p>link to set of builds for an image iteration</p>"
                    }
                  }
                },
                "author_id": {
                  "type": "string",
                  "title": "<p>The author who pointed the channel to the iteration</p>"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "<p>timestamp this channel pointer was created at</p>"
                }
              }
            }
          }
        }
      }
    },
    "hashicorp.cloud.packer.CreateIterationRequest": {
      "type": "object",
      "properties": {
        "location": {
          "type": "object",
          "properties": {
            "organization_id": {
              "type": "string",
              "description": "<p>organization_id is the id of the organization.</p>"
            },
            "project_id": {
              "type": "string",
              "description": "<p>project_id is the projects id.</p>"
            },
            "region": {
              "description": "<p>region is the region that the resource is located in. It is\noptional if the object being referenced is a global object.</p>",
              "type": "object",
              "properties": {
                "provider": {
                  "type": "string",
                  "title": "<p>provider is the named cloud provider (\"aws\", \"gcp\", \"azure\")</p>"
                },
                "region": {
                  "type": "string",
                  "title": "<p>region is the cloud region (\"us-west1\", \"us-east1\")</p>"
                }
              }
            }
          }
        },
        "bucket_slug": {
          "type": "string"
        },
        "fingerprint": {
          "type": "string",
          "description": "<p>fingerprint of the build; this will allow to regroup image builds under\nthe same iteration. So it could be for example a git sha.</p>"
        }
      }
    },
    "hashicorp.cloud.packer.CreateIterationResponse": {
      "type": "object",
      "properties": {
        "iteration": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "title": "<p>ULID</p>"
            },
            "bucket_slug": {
              "type": "string",
              "title": "<p>same bucket_slug as in the Bucket object</p>"
            },
            "iteration_ancestor_id": {
              "type": "string",
              "title": "<p>what image was used as source</p>"
            },
            "incremental_version": {
              "type": "integer",
              "format": "int32",
              "title": "<p>e.g 15</p>"
            },
            "complete": {
              "type": "boolean",
              "description": "<p>If true, this iteration is considered \"ready to use\" and will be\nreturned even if the include_incomplete flage is \"false\" in the\nlist iterations request.</p>"
            },
            "author_id": {
              "type": "string",
              "title": "<p>who created the iteration</p>"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "title": "<p>when iteration was created or updated</p>"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time"
            },
            "fingerprint": {
              "type": "string",
              "description": "<p>fingerprint of the build; this will allow to regroup image builds under\nthe same iteration. So it could be for example a git sha.</p>"
            },
            "builds": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "title": "<p>ULID</p>"
                  },
                  "iteration_id": {
                    "type": "string",
                    "title": "<p>ULID of the iteration</p>"
                  },
                  "component_type": {
                    "type": "string",
                    "title": "<p>builder or post-processor used to build this</p>"
                  },
                  "packer_run_uuid": {
                    "type": "string"
                  },
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "title": "<p>ULID for the image</p>"
                        },
                        "image_id": {
                          "type": "string",
                          "description": "<p>ID or URL of the remote cloud image as given by a build.</p>"
                        },
                        "region": {
                          "type": "string",
                          "title": "<p>region as given by <code>packer build</code>. eg. \"ap-east-1\"</p>"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "<p>Timestamp at which this image was created</p>"
                        }
                      },
                      "description": "Represents the actual region:image_id mapping for a single image, in a\nsingle build."
                    }
                  },
                  "cloud_provider": {
                    "type": "string",
                    "title": "<p>aws</p>"
                  },
                  "status": {
                    "title": "<p>complete</p>",
                    "type": "string",
                    "enum": ["UNSET", "RUNNING", "DONE", "CANCELLED", "FAILED"],
                    "default": "UNSET"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "labels": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "title": "<p>unstructured metadata</p>"
                  }
                }
              },
              "title": "<p>link to set of builds for an image iteration</p>"
            }
          }
        }
      }
    },
    "hashicorp.cloud.packer.DeleteBucketResponse": {
      "type": "object"
    },
    "hashicorp.cloud.packer.DeleteBuildResponse": {
      "type": "object"
    },
    "hashicorp.cloud.packer.DeleteChannelResponse": {
      "type": "object"
    },
    "hashicorp.cloud.packer.DeleteIterationResponse": {
      "type": "object"
    },
    "hashicorp.cloud.packer.GetAncestorImagesResponse": {
      "type": "object",
      "properties": {
        "ancestors": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "title": "<p>ULID</p>"
              },
              "bucket_slug": {
                "type": "string",
                "title": "<p>same bucket_slug as in the Bucket object</p>"
              },
              "iteration_ancestor_id": {
                "type": "string",
                "title": "<p>what image was used as source</p>"
              },
              "incremental_version": {
                "type": "integer",
                "format": "int32",
                "title": "<p>e.g 15</p>"
              },
              "complete": {
                "type": "boolean",
                "description": "<p>If true, this iteration is considered \"ready to use\" and will be\nreturned even if the include_incomplete flage is \"false\" in the\nlist iterations request.</p>"
              },
              "author_id": {
                "type": "string",
                "title": "<p>who created the iteration</p>"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "<p>when iteration was created or updated</p>"
              },
              "updated_at": {
                "type": "string",
                "format": "date-time"
              },
              "fingerprint": {
                "type": "string",
                "description": "<p>fingerprint of the build; this will allow to regroup image builds under\nthe same iteration. So it could be for example a git sha.</p>"
              },
              "builds": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "<p>ULID</p>"
                    },
                    "iteration_id": {
                      "type": "string",
                      "title": "<p>ULID of the iteration</p>"
                    },
                    "component_type": {
                      "type": "string",
                      "title": "<p>builder or post-processor used to build this</p>"
                    },
                    "packer_run_uuid": {
                      "type": "string"
                    },
                    "images": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "<p>ULID for the image</p>"
                          },
                          "image_id": {
                            "type": "string",
                            "description": "<p>ID or URL of the remote cloud image as given by a build.</p>"
                          },
                          "region": {
                            "type": "string",
                            "title": "<p>region as given by <code>packer build</code>. eg. \"ap-east-1\"</p>"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "<p>Timestamp at which this image was created</p>"
                          }
                        },
                        "description": "Represents the actual region:image_id mapping for a single image, in a\nsingle build."
                      }
                    },
                    "cloud_provider": {
                      "type": "string",
                      "title": "<p>aws</p>"
                    },
                    "status": {
                      "title": "<p>complete</p>",
                      "type": "string",
                      "enum": [
                        "UNSET",
                        "RUNNING",
                        "DONE",
                        "CANCELLED",
                        "FAILED"
                      ],
                      "default": "UNSET"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "labels": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "title": "<p>unstructured metadata</p>"
                    }
                  }
                },
                "title": "<p>link to set of builds for an image iteration</p>"
              }
            },
            "title": "image iterations messages"
          }
        }
      }
    },
    "hashicorp.cloud.packer.GetBucketResponse": {
      "type": "object",
      "properties": {
        "bucket": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "title": "<p>ULID</p>"
            },
            "slug": {
              "type": "string",
              "title": "<p>base-ubuntu-18-secure</p>"
            },
            "location": {
              "type": "object",
              "properties": {
                "organization_id": {
                  "type": "string",
                  "description": "<p>organization_id is the id of the organization.</p>"
                },
                "project_id": {
                  "type": "string",
                  "description": "<p>project_id is the projects id.</p>"
                },
                "region": {
                  "description": "<p>region is the region that the resource is located in. It is\noptional if the object being referenced is a global object.</p>",
                  "type": "object",
                  "properties": {
                    "provider": {
                      "type": "string",
                      "title": "<p>provider is the named cloud provider (\"aws\", \"gcp\", \"azure\")</p>"
                    },
                    "region": {
                      "type": "string",
                      "title": "<p>region is the cloud region (\"us-west1\", \"us-east1\")</p>"
                    }
                  }
                }
              }
            },
            "latest_iteration": {
              "title": "<p>latest iteration regardless of completion status</p>",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "<p>ULID</p>"
                },
                "bucket_slug": {
                  "type": "string",
                  "title": "<p>same bucket_slug as in the Bucket object</p>"
                },
                "iteration_ancestor_id": {
                  "type": "string",
                  "title": "<p>what image was used as source</p>"
                },
                "incremental_version": {
                  "type": "integer",
                  "format": "int32",
                  "title": "<p>e.g 15</p>"
                },
                "complete": {
                  "type": "boolean",
                  "description": "<p>If true, this iteration is considered \"ready to use\" and will be\nreturned even if the include_incomplete flage is \"false\" in the\nlist iterations request.</p>"
                },
                "author_id": {
                  "type": "string",
                  "title": "<p>who created the iteration</p>"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "<p>when iteration was created or updated</p>"
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time"
                },
                "fingerprint": {
                  "type": "string",
                  "description": "<p>fingerprint of the build; this will allow to regroup image builds under\nthe same iteration. So it could be for example a git sha.</p>"
                },
                "builds": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "<p>ULID</p>"
                      },
                      "iteration_id": {
                        "type": "string",
                        "title": "<p>ULID of the iteration</p>"
                      },
                      "component_type": {
                        "type": "string",
                        "title": "<p>builder or post-processor used to build this</p>"
                      },
                      "packer_run_uuid": {
                        "type": "string"
                      },
                      "images": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "title": "<p>ULID for the image</p>"
                            },
                            "image_id": {
                              "type": "string",
                              "description": "<p>ID or URL of the remote cloud image as given by a build.</p>"
                            },
                            "region": {
                              "type": "string",
                              "title": "<p>region as given by <code>packer build</code>. eg. \"ap-east-1\"</p>"
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "<p>Timestamp at which this image was created</p>"
                            }
                          },
                          "description": "Represents the actual region:image_id mapping for a single image, in a\nsingle build."
                        }
                      },
                      "cloud_provider": {
                        "type": "string",
                        "title": "<p>aws</p>"
                      },
                      "status": {
                        "title": "<p>complete</p>",
                        "type": "string",
                        "enum": [
                          "UNSET",
                          "RUNNING",
                          "DONE",
                          "CANCELLED",
                          "FAILED"
                        ],
                        "default": "UNSET"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "labels": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "title": "<p>unstructured metadata</p>"
                      }
                    }
                  },
                  "title": "<p>link to set of builds for an image iteration</p>"
                }
              }
            },
            "latest_version": {
              "type": "integer",
              "format": "int32",
              "title": "<p>latest completed version</p>"
            },
            "created_at": {
              "type": "string",
              "format": "date-time"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time"
            },
            "platforms": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "<p>[\"aws\", \"gcp\"]</p>"
            },
            "description": {
              "type": "string",
              "title": "<p>\"This image is a hardened platform for other teams\"</p>"
            },
            "labels": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "title": "<p>Slot for unstructured metadata tags\nfor example {\"repo\": \"https://github.com/hashicorp/common\"}</p>"
            },
            "iteration_count": {
              "type": "string",
              "format": "int64",
              "description": "<p>number of total iterations (not just versions), for UI.</p>"
            }
          }
        }
      }
    },
    "hashicorp.cloud.packer.GetBuildResponse": {
      "type": "object",
      "properties": {
        "build": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "title": "<p>ULID</p>"
            },
            "iteration_id": {
              "type": "string",
              "title": "<p>ULID of the iteration</p>"
            },
            "component_type": {
              "type": "string",
              "title": "<p>builder or post-processor used to build this</p>"
            },
            "packer_run_uuid": {
              "type": "string"
            },
            "images": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "title": "<p>ULID for the image</p>"
                  },
                  "image_id": {
                    "type": "string",
                    "description": "<p>ID or URL of the remote cloud image as given by a build.</p>"
                  },
                  "region": {
                    "type": "string",
                    "title": "<p>region as given by <code>packer build</code>. eg. \"ap-east-1\"</p>"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "<p>Timestamp at which this image was created</p>"
                  }
                },
                "description": "Represents the actual region:image_id mapping for a single image, in a\nsingle build."
              }
            },
            "cloud_provider": {
              "type": "string",
              "title": "<p>aws</p>"
            },
            "status": {
              "title": "<p>complete</p>",
              "type": "string",
              "enum": ["UNSET", "RUNNING", "DONE", "CANCELLED", "FAILED"],
              "default": "UNSET"
            },
            "created_at": {
              "type": "string",
              "format": "date-time"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time"
            },
            "labels": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "title": "<p>unstructured metadata</p>"
            }
          }
        }
      }
    },
    "hashicorp.cloud.packer.GetChannelResponse": {
      "type": "object",
      "properties": {
        "channel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "title": "<p>ULID of this chanel</p>"
            },
            "slug": {
              "type": "string",
              "title": "<p>Something like \"production-stable\"</p>"
            },
            "bucket_slug": {
              "type": "string",
              "title": "<p>image bucket this belongs to</p>"
            },
            "author_id": {
              "type": "string",
              "title": "<p>The author who created the channel</p>"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "title": "<p>timestamp this channel was created at</p>"
            },
            "revoked_at": {
              "type": "string",
              "format": "date-time",
              "title": "<p>timestamp this channel was revoked at</p>"
            },
            "revocation_message": {
              "type": "string",
              "title": "<p>message with the reason of why this channel was revoked</p>"
            },
            "pointer": {
              "title": "<p>The channel pointer to the iteration</p>",
              "type": "object",
              "properties": {
                "iteration": {
                  "title": "<p>The iteration the channel is pointing to</p>",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "<p>ULID</p>"
                    },
                    "bucket_slug": {
                      "type": "string",
                      "title": "<p>same bucket_slug as in the Bucket object</p>"
                    },
                    "iteration_ancestor_id": {
                      "type": "string",
                      "title": "<p>what image was used as source</p>"
                    },
                    "incremental_version": {
                      "type": "integer",
                      "format": "int32",
                      "title": "<p>e.g 15</p>"
                    },
                    "complete": {
                      "type": "boolean",
                      "description": "<p>If true, this iteration is considered \"ready to use\" and will be\nreturned even if the include_incomplete flage is \"false\" in the\nlist iterations request.</p>"
                    },
                    "author_id": {
                      "type": "string",
                      "title": "<p>who created the iteration</p>"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "<p>when iteration was created or updated</p>"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "fingerprint": {
                      "type": "string",
                      "description": "<p>fingerprint of the build; this will allow to regroup image builds under\nthe same iteration. So it could be for example a git sha.</p>"
                    },
                    "builds": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "<p>ULID</p>"
                          },
                          "iteration_id": {
                            "type": "string",
                            "title": "<p>ULID of the iteration</p>"
                          },
                          "component_type": {
                            "type": "string",
                            "title": "<p>builder or post-processor used to build this</p>"
                          },
                          "packer_run_uuid": {
                            "type": "string"
                          },
                          "images": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "title": "<p>ULID for the image</p>"
                                },
                                "image_id": {
                                  "type": "string",
                                  "description": "<p>ID or URL of the remote cloud image as given by a build.</p>"
                                },
                                "region": {
                                  "type": "string",
                                  "title": "<p>region as given by <code>packer build</code>. eg. \"ap-east-1\"</p>"
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "title": "<p>Timestamp at which this image was created</p>"
                                }
                              },
                              "description": "Represents the actual region:image_id mapping for a single image, in a\nsingle build."
                            }
                          },
                          "cloud_provider": {
                            "type": "string",
                            "title": "<p>aws</p>"
                          },
                          "status": {
                            "title": "<p>complete</p>",
                            "type": "string",
                            "enum": [
                              "UNSET",
                              "RUNNING",
                              "DONE",
                              "CANCELLED",
                              "FAILED"
                            ],
                            "default": "UNSET"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "labels": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "title": "<p>unstructured metadata</p>"
                          }
                        }
                      },
                      "title": "<p>link to set of builds for an image iteration</p>"
                    }
                  }
                },
                "author_id": {
                  "type": "string",
                  "title": "<p>The author who pointed the channel to the iteration</p>"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "<p>timestamp this channel pointer was created at</p>"
                }
              }
            }
          }
        }
      }
    },
    "hashicorp.cloud.packer.GetChildImagesResponse": {
      "type": "object",
      "properties": {
        "children": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "title": "<p>ULID</p>"
              },
              "bucket_slug": {
                "type": "string",
                "title": "<p>same bucket_slug as in the Bucket object</p>"
              },
              "iteration_ancestor_id": {
                "type": "string",
                "title": "<p>what image was used as source</p>"
              },
              "incremental_version": {
                "type": "integer",
                "format": "int32",
                "title": "<p>e.g 15</p>"
              },
              "complete": {
                "type": "boolean",
                "description": "<p>If true, this iteration is considered \"ready to use\" and will be\nreturned even if the include_incomplete flage is \"false\" in the\nlist iterations request.</p>"
              },
              "author_id": {
                "type": "string",
                "title": "<p>who created the iteration</p>"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "<p>when iteration was created or updated</p>"
              },
              "updated_at": {
                "type": "string",
                "format": "date-time"
              },
              "fingerprint": {
                "type": "string",
                "description": "<p>fingerprint of the build; this will allow to regroup image builds under\nthe same iteration. So it could be for example a git sha.</p>"
              },
              "builds": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "<p>ULID</p>"
                    },
                    "iteration_id": {
                      "type": "string",
                      "title": "<p>ULID of the iteration</p>"
                    },
                    "component_type": {
                      "type": "string",
                      "title": "<p>builder or post-processor used to build this</p>"
                    },
                    "packer_run_uuid": {
                      "type": "string"
                    },
                    "images": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "<p>ULID for the image</p>"
                          },
                          "image_id": {
                            "type": "string",
                            "description": "<p>ID or URL of the remote cloud image as given by a build.</p>"
                          },
                          "region": {
                            "type": "string",
                            "title": "<p>region as given by <code>packer build</code>. eg. \"ap-east-1\"</p>"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "<p>Timestamp at which this image was created</p>"
                          }
                        },
                        "description": "Represents the actual region:image_id mapping for a single image, in a\nsingle build."
                      }
                    },
                    "cloud_provider": {
                      "type": "string",
                      "title": "<p>aws</p>"
                    },
                    "status": {
                      "title": "<p>complete</p>",
                      "type": "string",
                      "enum": [
                        "UNSET",
                        "RUNNING",
                        "DONE",
                        "CANCELLED",
                        "FAILED"
                      ],
                      "default": "UNSET"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "labels": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "title": "<p>unstructured metadata</p>"
                    }
                  }
                },
                "title": "<p>link to set of builds for an image iteration</p>"
              }
            },
            "title": "image iterations messages"
          }
        }
      }
    },
    "hashicorp.cloud.packer.GetIterationResponse": {
      "type": "object",
      "properties": {
        "iteration": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "title": "<p>ULID</p>"
            },
            "bucket_slug": {
              "type": "string",
              "title": "<p>same bucket_slug as in the Bucket object</p>"
            },
            "iteration_ancestor_id": {
              "type": "string",
              "title": "<p>what image was used as source</p>"
            },
            "incremental_version": {
              "type": "integer",
              "format": "int32",
              "title": "<p>e.g 15</p>"
            },
            "complete": {
              "type": "boolean",
              "description": "<p>If true, this iteration is considered \"ready to use\" and will be\nreturned even if the include_incomplete flage is \"false\" in the\nlist iterations request.</p>"
            },
            "author_id": {
              "type": "string",
              "title": "<p>who created the iteration</p>"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "title": "<p>when iteration was created or updated</p>"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time"
            },
            "fingerprint": {
              "type": "string",
              "description": "<p>fingerprint of the build; this will allow to regroup image builds under\nthe same iteration. So it could be for example a git sha.</p>"
            },
            "builds": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "title": "<p>ULID</p>"
                  },
                  "iteration_id": {
                    "type": "string",
                    "title": "<p>ULID of the iteration</p>"
                  },
                  "component_type": {
                    "type": "string",
                    "title": "<p>builder or post-processor used to build this</p>"
                  },
                  "packer_run_uuid": {
                    "type": "string"
                  },
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "title": "<p>ULID for the image</p>"
                        },
                        "image_id": {
                          "type": "string",
                          "description": "<p>ID or URL of the remote cloud image as given by a build.</p>"
                        },
                        "region": {
                          "type": "string",
                          "title": "<p>region as given by <code>packer build</code>. eg. \"ap-east-1\"</p>"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "<p>Timestamp at which this image was created</p>"
                        }
                      },
                      "description": "Represents the actual region:image_id mapping for a single image, in a\nsingle build."
                    }
                  },
                  "cloud_provider": {
                    "type": "string",
                    "title": "<p>aws</p>"
                  },
                  "status": {
                    "title": "<p>complete</p>",
                    "type": "string",
                    "enum": ["UNSET", "RUNNING", "DONE", "CANCELLED", "FAILED"],
                    "default": "UNSET"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "labels": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "title": "<p>unstructured metadata</p>"
                  }
                }
              },
              "title": "<p>link to set of builds for an image iteration</p>"
            }
          }
        }
      }
    },
    "hashicorp.cloud.packer.Image": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "<p>ULID for the image</p>"
        },
        "image_id": {
          "type": "string",
          "description": "<p>ID or URL of the remote cloud image as given by a build.</p>"
        },
        "region": {
          "type": "string",
          "title": "<p>region as given by <code>packer build</code>. eg. \"ap-east-1\"</p>"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "<p>Timestamp at which this image was created</p>"
        }
      },
      "description": "Represents the actual region:image_id mapping for a single image, in a\nsingle build."
    },
    "hashicorp.cloud.packer.Iteration": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "<p>ULID</p>"
        },
        "bucket_slug": {
          "type": "string",
          "title": "<p>same bucket_slug as in the Bucket object</p>"
        },
        "iteration_ancestor_id": {
          "type": "string",
          "title": "<p>what image was used as source</p>"
        },
        "incremental_version": {
          "type": "integer",
          "format": "int32",
          "title": "<p>e.g 15</p>"
        },
        "complete": {
          "type": "boolean",
          "description": "<p>If true, this iteration is considered \"ready to use\" and will be\nreturned even if the include_incomplete flage is \"false\" in the\nlist iterations request.</p>"
        },
        "author_id": {
          "type": "string",
          "title": "<p>who created the iteration</p>"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "<p>when iteration was created or updated</p>"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "fingerprint": {
          "type": "string",
          "description": "<p>fingerprint of the build; this will allow to regroup image builds under\nthe same iteration. So it could be for example a git sha.</p>"
        },
        "builds": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "title": "<p>ULID</p>"
              },
              "iteration_id": {
                "type": "string",
                "title": "<p>ULID of the iteration</p>"
              },
              "component_type": {
                "type": "string",
                "title": "<p>builder or post-processor used to build this</p>"
              },
              "packer_run_uuid": {
                "type": "string"
              },
              "images": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "<p>ULID for the image</p>"
                    },
                    "image_id": {
                      "type": "string",
                      "description": "<p>ID or URL of the remote cloud image as given by a build.</p>"
                    },
                    "region": {
                      "type": "string",
                      "title": "<p>region as given by <code>packer build</code>. eg. \"ap-east-1\"</p>"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "<p>Timestamp at which this image was created</p>"
                    }
                  },
                  "description": "Represents the actual region:image_id mapping for a single image, in a\nsingle build."
                }
              },
              "cloud_provider": {
                "type": "string",
                "title": "<p>aws</p>"
              },
              "status": {
                "title": "<p>complete</p>",
                "type": "string",
                "enum": ["UNSET", "RUNNING", "DONE", "CANCELLED", "FAILED"],
                "default": "UNSET"
              },
              "created_at": {
                "type": "string",
                "format": "date-time"
              },
              "updated_at": {
                "type": "string",
                "format": "date-time"
              },
              "labels": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "title": "<p>unstructured metadata</p>"
              }
            }
          },
          "title": "<p>link to set of builds for an image iteration</p>"
        }
      },
      "title": "image iterations messages"
    },
    "hashicorp.cloud.packer.IterationforList": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "<p>ULID</p>"
        },
        "bucket_slug": {
          "type": "string",
          "title": "<p>same bucket_slug as in the Bucket object</p>"
        },
        "iteration_ancestor_id": {
          "type": "string",
          "title": "<p>what image was used as source</p>"
        },
        "incremental_version": {
          "type": "integer",
          "format": "int32",
          "title": "<p>e.g 15</p>"
        },
        "complete": {
          "type": "boolean",
          "description": "<p>If true, this iteration is considered \"ready to use\" and will be\nreturned even if the include_incomplete flage is \"false\" in the\nlist iterations request.</p>"
        },
        "author_id": {
          "type": "string",
          "title": "<p>who created the iteration</p>"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "<p>when iteration was created or updated</p>"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "fingerprint": {
          "type": "string",
          "description": "<p>fingerprint of the build; this will allow to regroup image builds under\nthe same iteration. So it could be for example a git sha.</p>"
        }
      },
      "description": "The list endpoint should not return build information, but should return\nwhat channels are associated with a given iteration."
    },
    "hashicorp.cloud.packer.ListBucketsResponse": {
      "type": "object",
      "properties": {
        "buckets": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "title": "<p>ULID</p>"
              },
              "slug": {
                "type": "string",
                "title": "<p>base-ubuntu-18-secure</p>"
              },
              "location": {
                "type": "object",
                "properties": {
                  "organization_id": {
                    "type": "string",
                    "description": "<p>organization_id is the id of the organization.</p>"
                  },
                  "project_id": {
                    "type": "string",
                    "description": "<p>project_id is the projects id.</p>"
                  },
                  "region": {
                    "description": "<p>region is the region that the resource is located in. It is\noptional if the object being referenced is a global object.</p>",
                    "type": "object",
                    "properties": {
                      "provider": {
                        "type": "string",
                        "title": "<p>provider is the named cloud provider (\"aws\", \"gcp\", \"azure\")</p>"
                      },
                      "region": {
                        "type": "string",
                        "title": "<p>region is the cloud region (\"us-west1\", \"us-east1\")</p>"
                      }
                    }
                  }
                }
              },
              "latest_iteration": {
                "title": "<p>latest iteration regardless of completion status</p>",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "title": "<p>ULID</p>"
                  },
                  "bucket_slug": {
                    "type": "string",
                    "title": "<p>same bucket_slug as in the Bucket object</p>"
                  },
                  "iteration_ancestor_id": {
                    "type": "string",
                    "title": "<p>what image was used as source</p>"
                  },
                  "incremental_version": {
                    "type": "integer",
                    "format": "int32",
                    "title": "<p>e.g 15</p>"
                  },
                  "complete": {
                    "type": "boolean",
                    "description": "<p>If true, this iteration is considered \"ready to use\" and will be\nreturned even if the include_incomplete flage is \"false\" in the\nlist iterations request.</p>"
                  },
                  "author_id": {
                    "type": "string",
                    "title": "<p>who created the iteration</p>"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "<p>when iteration was created or updated</p>"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "fingerprint": {
                    "type": "string",
                    "description": "<p>fingerprint of the build; this will allow to regroup image builds under\nthe same iteration. So it could be for example a git sha.</p>"
                  },
                  "builds": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "title": "<p>ULID</p>"
                        },
                        "iteration_id": {
                          "type": "string",
                          "title": "<p>ULID of the iteration</p>"
                        },
                        "component_type": {
                          "type": "string",
                          "title": "<p>builder or post-processor used to build this</p>"
                        },
                        "packer_run_uuid": {
                          "type": "string"
                        },
                        "images": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "title": "<p>ULID for the image</p>"
                              },
                              "image_id": {
                                "type": "string",
                                "description": "<p>ID or URL of the remote cloud image as given by a build.</p>"
                              },
                              "region": {
                                "type": "string",
                                "title": "<p>region as given by <code>packer build</code>. eg. \"ap-east-1\"</p>"
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "title": "<p>Timestamp at which this image was created</p>"
                              }
                            },
                            "description": "Represents the actual region:image_id mapping for a single image, in a\nsingle build."
                          }
                        },
                        "cloud_provider": {
                          "type": "string",
                          "title": "<p>aws</p>"
                        },
                        "status": {
                          "title": "<p>complete</p>",
                          "type": "string",
                          "enum": [
                            "UNSET",
                            "RUNNING",
                            "DONE",
                            "CANCELLED",
                            "FAILED"
                          ],
                          "default": "UNSET"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "labels": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "title": "<p>unstructured metadata</p>"
                        }
                      }
                    },
                    "title": "<p>link to set of builds for an image iteration</p>"
                  }
                }
              },
              "latest_version": {
                "type": "integer",
                "format": "int32",
                "title": "<p>latest completed version</p>"
              },
              "created_at": {
                "type": "string",
                "format": "date-time"
              },
              "updated_at": {
                "type": "string",
                "format": "date-time"
              },
              "platforms": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "title": "<p>[\"aws\", \"gcp\"]</p>"
              },
              "description": {
                "type": "string",
                "title": "<p>\"This image is a hardened platform for other teams\"</p>"
              },
              "labels": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "title": "<p>Slot for unstructured metadata tags\nfor example {\"repo\": \"https://github.com/hashicorp/common\"}</p>"
              },
              "iteration_count": {
                "type": "string",
                "format": "int64",
                "description": "<p>number of total iterations (not just versions), for UI.</p>"
              }
            }
          }
        },
        "pagination": {
          "description": "<p>pagination contains the pagination tokens for a subsequent request.</p>",
          "type": "object",
          "properties": {
            "next_page_token": {
              "type": "string",
              "description": "<p>This token allows you to get the next page of results for list requests.\nIf the number of results is larger than <code>page_size</code>, use the\n<code>next_page_token</code> as a value for the query parameter <code>next_page_token</code> in\nthe next request. The value will become empty when there are no more pages.</p>"
            },
            "previous_page_token": {
              "type": "string",
              "description": "<p>This token allows you to get the previous page of results for list\nrequests. If the number of results is larger than <code>page_size</code>, use the\n<code>previous_page_token</code> as a value for the query parameter\n<code>previous_page_token</code> in the next request. The value will become empty when\nthere are no more pages.</p>"
            }
          }
        }
      }
    },
    "hashicorp.cloud.packer.ListBuildsResponse": {
      "type": "object",
      "properties": {
        "location": {
          "type": "object",
          "properties": {
            "organization_id": {
              "type": "string",
              "description": "<p>organization_id is the id of the organization.</p>"
            },
            "project_id": {
              "type": "string",
              "description": "<p>project_id is the projects id.</p>"
            },
            "region": {
              "description": "<p>region is the region that the resource is located in. It is\noptional if the object being referenced is a global object.</p>",
              "type": "object",
              "properties": {
                "provider": {
                  "type": "string",
                  "title": "<p>provider is the named cloud provider (\"aws\", \"gcp\", \"azure\")</p>"
                },
                "region": {
                  "type": "string",
                  "title": "<p>region is the cloud region (\"us-west1\", \"us-east1\")</p>"
                }
              }
            }
          }
        },
        "pagination": {
          "type": "object",
          "properties": {
            "next_page_token": {
              "type": "string",
              "description": "<p>This token allows you to get the next page of results for list requests.\nIf the number of results is larger than <code>page_size</code>, use the\n<code>next_page_token</code> as a value for the query parameter <code>next_page_token</code> in\nthe next request. The value will become empty when there are no more pages.</p>"
            },
            "previous_page_token": {
              "type": "string",
              "description": "<p>This token allows you to get the previous page of results for list\nrequests. If the number of results is larger than <code>page_size</code>, use the\n<code>previous_page_token</code> as a value for the query parameter\n<code>previous_page_token</code> in the next request. The value will become empty when\nthere are no more pages.</p>"
            }
          }
        },
        "builds": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "title": "<p>ULID</p>"
              },
              "iteration_id": {
                "type": "string",
                "title": "<p>ULID of the iteration</p>"
              },
              "component_type": {
                "type": "string",
                "title": "<p>builder or post-processor used to build this</p>"
              },
              "packer_run_uuid": {
                "type": "string"
              },
              "images": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "<p>ULID for the image</p>"
                    },
                    "image_id": {
                      "type": "string",
                      "description": "<p>ID or URL of the remote cloud image as given by a build.</p>"
                    },
                    "region": {
                      "type": "string",
                      "title": "<p>region as given by <code>packer build</code>. eg. \"ap-east-1\"</p>"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "<p>Timestamp at which this image was created</p>"
                    }
                  },
                  "description": "Represents the actual region:image_id mapping for a single image, in a\nsingle build."
                }
              },
              "cloud_provider": {
                "type": "string",
                "title": "<p>aws</p>"
              },
              "status": {
                "title": "<p>complete</p>",
                "type": "string",
                "enum": ["UNSET", "RUNNING", "DONE", "CANCELLED", "FAILED"],
                "default": "UNSET"
              },
              "created_at": {
                "type": "string",
                "format": "date-time"
              },
              "updated_at": {
                "type": "string",
                "format": "date-time"
              },
              "labels": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "title": "<p>unstructured metadata</p>"
              }
            }
          }
        }
      }
    },
    "hashicorp.cloud.packer.ListChannelsResponse": {
      "type": "object",
      "properties": {
        "channels": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "title": "<p>ULID of this chanel</p>"
              },
              "slug": {
                "type": "string",
                "title": "<p>Something like \"production-stable\"</p>"
              },
              "bucket_slug": {
                "type": "string",
                "title": "<p>image bucket this belongs to</p>"
              },
              "author_id": {
                "type": "string",
                "title": "<p>The author who created the channel</p>"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "<p>timestamp this channel was created at</p>"
              },
              "revoked_at": {
                "type": "string",
                "format": "date-time",
                "title": "<p>timestamp this channel was revoked at</p>"
              },
              "revocation_message": {
                "type": "string",
                "title": "<p>message with the reason of why this channel was revoked</p>"
              },
              "pointer": {
                "title": "<p>The channel pointer to the iteration</p>",
                "type": "object",
                "properties": {
                  "iteration": {
                    "title": "<p>The iteration the channel is pointing to</p>",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "<p>ULID</p>"
                      },
                      "bucket_slug": {
                        "type": "string",
                        "title": "<p>same bucket_slug as in the Bucket object</p>"
                      },
                      "iteration_ancestor_id": {
                        "type": "string",
                        "title": "<p>what image was used as source</p>"
                      },
                      "incremental_version": {
                        "type": "integer",
                        "format": "int32",
                        "title": "<p>e.g 15</p>"
                      },
                      "complete": {
                        "type": "boolean",
                        "description": "<p>If true, this iteration is considered \"ready to use\" and will be\nreturned even if the include_incomplete flage is \"false\" in the\nlist iterations request.</p>"
                      },
                      "author_id": {
                        "type": "string",
                        "title": "<p>who created the iteration</p>"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "<p>when iteration was created or updated</p>"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "fingerprint": {
                        "type": "string",
                        "description": "<p>fingerprint of the build; this will allow to regroup image builds under\nthe same iteration. So it could be for example a git sha.</p>"
                      },
                      "builds": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "title": "<p>ULID</p>"
                            },
                            "iteration_id": {
                              "type": "string",
                              "title": "<p>ULID of the iteration</p>"
                            },
                            "component_type": {
                              "type": "string",
                              "title": "<p>builder or post-processor used to build this</p>"
                            },
                            "packer_run_uuid": {
                              "type": "string"
                            },
                            "images": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "title": "<p>ULID for the image</p>"
                                  },
                                  "image_id": {
                                    "type": "string",
                                    "description": "<p>ID or URL of the remote cloud image as given by a build.</p>"
                                  },
                                  "region": {
                                    "type": "string",
                                    "title": "<p>region as given by <code>packer build</code>. eg. \"ap-east-1\"</p>"
                                  },
                                  "created_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "title": "<p>Timestamp at which this image was created</p>"
                                  }
                                },
                                "description": "Represents the actual region:image_id mapping for a single image, in a\nsingle build."
                              }
                            },
                            "cloud_provider": {
                              "type": "string",
                              "title": "<p>aws</p>"
                            },
                            "status": {
                              "title": "<p>complete</p>",
                              "type": "string",
                              "enum": [
                                "UNSET",
                                "RUNNING",
                                "DONE",
                                "CANCELLED",
                                "FAILED"
                              ],
                              "default": "UNSET"
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "updated_at": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "labels": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              },
                              "title": "<p>unstructured metadata</p>"
                            }
                          }
                        },
                        "title": "<p>link to set of builds for an image iteration</p>"
                      }
                    }
                  },
                  "author_id": {
                    "type": "string",
                    "title": "<p>The author who pointed the channel to the iteration</p>"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "<p>timestamp this channel pointer was created at</p>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "hashicorp.cloud.packer.ListIterationsResponse": {
      "type": "object",
      "properties": {
        "iterations": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "title": "<p>ULID</p>"
              },
              "bucket_slug": {
                "type": "string",
                "title": "<p>same bucket_slug as in the Bucket object</p>"
              },
              "iteration_ancestor_id": {
                "type": "string",
                "title": "<p>what image was used as source</p>"
              },
              "incremental_version": {
                "type": "integer",
                "format": "int32",
                "title": "<p>e.g 15</p>"
              },
              "complete": {
                "type": "boolean",
                "description": "<p>If true, this iteration is considered \"ready to use\" and will be\nreturned even if the include_incomplete flage is \"false\" in the\nlist iterations request.</p>"
              },
              "author_id": {
                "type": "string",
                "title": "<p>who created the iteration</p>"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "<p>when iteration was created or updated</p>"
              },
              "updated_at": {
                "type": "string",
                "format": "date-time"
              },
              "fingerprint": {
                "type": "string",
                "description": "<p>fingerprint of the build; this will allow to regroup image builds under\nthe same iteration. So it could be for example a git sha.</p>"
              }
            },
            "description": "The list endpoint should not return build information, but should return\nwhat channels are associated with a given iteration."
          }
        },
        "pagination": {
          "type": "object",
          "properties": {
            "next_page_token": {
              "type": "string",
              "description": "<p>This token allows you to get the next page of results for list requests.\nIf the number of results is larger than <code>page_size</code>, use the\n<code>next_page_token</code> as a value for the query parameter <code>next_page_token</code> in\nthe next request. The value will become empty when there are no more pages.</p>"
            },
            "previous_page_token": {
              "type": "string",
              "description": "<p>This token allows you to get the previous page of results for list\nrequests. If the number of results is larger than <code>page_size</code>, use the\n<code>previous_page_token</code> as a value for the query parameter\n<code>previous_page_token</code> in the next request. The value will become empty when\nthere are no more pages.</p>"
            }
          }
        }
      }
    },
    "hashicorp.cloud.packer.UpdateBucketRequest": {
      "type": "object",
      "properties": {
        "location": {
          "type": "object",
          "properties": {
            "organization_id": {
              "type": "string",
              "description": "<p>organization_id is the id of the organization.</p>"
            },
            "project_id": {
              "type": "string",
              "description": "<p>project_id is the projects id.</p>"
            },
            "region": {
              "description": "<p>region is the region that the resource is located in. It is\noptional if the object being referenced is a global object.</p>",
              "type": "object",
              "properties": {
                "provider": {
                  "type": "string",
                  "title": "<p>provider is the named cloud provider (\"aws\", \"gcp\", \"azure\")</p>"
                },
                "region": {
                  "type": "string",
                  "title": "<p>region is the cloud region (\"us-west1\", \"us-east1\")</p>"
                }
              }
            }
          }
        },
        "bucket_slug": {
          "type": "string",
          "title": "<p>base-ubuntu-18-secure</p>"
        },
        "platforms": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "<p>[\"aws\", \"gcp\"]</p>"
        },
        "description": {
          "type": "string",
          "title": "<p>\"This image is a hardened platform for other teams\"</p>"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "<p>Slot for unstructured metadata tags\nfor example {\"repo\": \"https://github.com/hashicorp/common\"}</p>"
        }
      }
    },
    "hashicorp.cloud.packer.UpdateBucketResponse": {
      "type": "object",
      "properties": {
        "bucket": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "title": "<p>ULID</p>"
            },
            "slug": {
              "type": "string",
              "title": "<p>base-ubuntu-18-secure</p>"
            },
            "location": {
              "type": "object",
              "properties": {
                "organization_id": {
                  "type": "string",
                  "description": "<p>organization_id is the id of the organization.</p>"
                },
                "project_id": {
                  "type": "string",
                  "description": "<p>project_id is the projects id.</p>"
                },
                "region": {
                  "description": "<p>region is the region that the resource is located in. It is\noptional if the object being referenced is a global object.</p>",
                  "type": "object",
                  "properties": {
                    "provider": {
                      "type": "string",
                      "title": "<p>provider is the named cloud provider (\"aws\", \"gcp\", \"azure\")</p>"
                    },
                    "region": {
                      "type": "string",
                      "title": "<p>region is the cloud region (\"us-west1\", \"us-east1\")</p>"
                    }
                  }
                }
              }
            },
            "latest_iteration": {
              "title": "<p>latest iteration regardless of completion status</p>",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "<p>ULID</p>"
                },
                "bucket_slug": {
                  "type": "string",
                  "title": "<p>same bucket_slug as in the Bucket object</p>"
                },
                "iteration_ancestor_id": {
                  "type": "string",
                  "title": "<p>what image was used as source</p>"
                },
                "incremental_version": {
                  "type": "integer",
                  "format": "int32",
                  "title": "<p>e.g 15</p>"
                },
                "complete": {
                  "type": "boolean",
                  "description": "<p>If true, this iteration is considered \"ready to use\" and will be\nreturned even if the include_incomplete flage is \"false\" in the\nlist iterations request.</p>"
                },
                "author_id": {
                  "type": "string",
                  "title": "<p>who created the iteration</p>"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "<p>when iteration was created or updated</p>"
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time"
                },
                "fingerprint": {
                  "type": "string",
                  "description": "<p>fingerprint of the build; this will allow to regroup image builds under\nthe same iteration. So it could be for example a git sha.</p>"
                },
                "builds": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "<p>ULID</p>"
                      },
                      "iteration_id": {
                        "type": "string",
                        "title": "<p>ULID of the iteration</p>"
                      },
                      "component_type": {
                        "type": "string",
                        "title": "<p>builder or post-processor used to build this</p>"
                      },
                      "packer_run_uuid": {
                        "type": "string"
                      },
                      "images": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "title": "<p>ULID for the image</p>"
                            },
                            "image_id": {
                              "type": "string",
                              "description": "<p>ID or URL of the remote cloud image as given by a build.</p>"
                            },
                            "region": {
                              "type": "string",
                              "title": "<p>region as given by <code>packer build</code>. eg. \"ap-east-1\"</p>"
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "<p>Timestamp at which this image was created</p>"
                            }
                          },
                          "description": "Represents the actual region:image_id mapping for a single image, in a\nsingle build."
                        }
                      },
                      "cloud_provider": {
                        "type": "string",
                        "title": "<p>aws</p>"
                      },
                      "status": {
                        "title": "<p>complete</p>",
                        "type": "string",
                        "enum": [
                          "UNSET",
                          "RUNNING",
                          "DONE",
                          "CANCELLED",
                          "FAILED"
                        ],
                        "default": "UNSET"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "labels": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "title": "<p>unstructured metadata</p>"
                      }
                    }
                  },
                  "title": "<p>link to set of builds for an image iteration</p>"
                }
              }
            },
            "latest_version": {
              "type": "integer",
              "format": "int32",
              "title": "<p>latest completed version</p>"
            },
            "created_at": {
              "type": "string",
              "format": "date-time"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time"
            },
            "platforms": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "<p>[\"aws\", \"gcp\"]</p>"
            },
            "description": {
              "type": "string",
              "title": "<p>\"This image is a hardened platform for other teams\"</p>"
            },
            "labels": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "title": "<p>Slot for unstructured metadata tags\nfor example {\"repo\": \"https://github.com/hashicorp/common\"}</p>"
            },
            "iteration_count": {
              "type": "string",
              "format": "int64",
              "description": "<p>number of total iterations (not just versions), for UI.</p>"
            }
          }
        }
      }
    },
    "hashicorp.cloud.packer.UpdateBuildRequest": {
      "type": "object",
      "properties": {
        "location": {
          "title": "<p>org and project info</p>",
          "type": "object",
          "properties": {
            "organization_id": {
              "type": "string",
              "description": "<p>organization_id is the id of the organization.</p>"
            },
            "project_id": {
              "type": "string",
              "description": "<p>project_id is the projects id.</p>"
            },
            "region": {
              "description": "<p>region is the region that the resource is located in. It is\noptional if the object being referenced is a global object.</p>",
              "type": "object",
              "properties": {
                "provider": {
                  "type": "string",
                  "title": "<p>provider is the named cloud provider (\"aws\", \"gcp\", \"azure\")</p>"
                },
                "region": {
                  "type": "string",
                  "title": "<p>region is the cloud region (\"us-west1\", \"us-east1\")</p>"
                }
              }
            }
          }
        },
        "build_id": {
          "type": "string",
          "title": "<p>build ULID</p>"
        },
        "updates": {
          "title": "<p>custom build info</p>",
          "type": "object",
          "properties": {
            "status": {
              "title": "<p>Running, Done, Failed</p>",
              "type": "string",
              "enum": ["UNSET", "RUNNING", "DONE", "CANCELLED", "FAILED"],
              "default": "UNSET"
            },
            "cloud_provider": {
              "type": "string",
              "description": "<p>aws, gcp, etc.</p>"
            },
            "packer_run_uuid": {
              "type": "string",
              "description": "<p>Packer build run UUID can change because we may be updating a build that\npreviously failed.</p>"
            },
            "images": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "title": "<p>ULID for the image</p>"
                  },
                  "image_id": {
                    "type": "string",
                    "description": "<p>ID or URL of the remote cloud image as given by a build.</p>"
                  },
                  "region": {
                    "type": "string",
                    "title": "<p>region as given by <code>packer build</code>. eg. \"ap-east-1\"</p>"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "<p>Timestamp at which this image was created</p>"
                  }
                },
                "description": "Represents the actual region:image_id mapping for a single image, in a\nsingle build."
              },
              "description": "<p>The length of this list determines how many\nrows this combination of iteration_id and builder_type have in the\nbuild table.</p>"
            },
            "labels": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "<p>Labels to add to the build.</p>"
            }
          }
        }
      }
    },
    "hashicorp.cloud.packer.UpdateBuildResponse": {
      "type": "object",
      "properties": {
        "build": {
          "title": "<p>custom build info</p>",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "title": "<p>ULID</p>"
            },
            "iteration_id": {
              "type": "string",
              "title": "<p>ULID of the iteration</p>"
            },
            "component_type": {
              "type": "string",
              "title": "<p>builder or post-processor used to build this</p>"
            },
            "packer_run_uuid": {
              "type": "string"
            },
            "images": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "title": "<p>ULID for the image</p>"
                  },
                  "image_id": {
                    "type": "string",
                    "description": "<p>ID or URL of the remote cloud image as given by a build.</p>"
                  },
                  "region": {
                    "type": "string",
                    "title": "<p>region as given by <code>packer build</code>. eg. \"ap-east-1\"</p>"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "<p>Timestamp at which this image was created</p>"
                  }
                },
                "description": "Represents the actual region:image_id mapping for a single image, in a\nsingle build."
              }
            },
            "cloud_provider": {
              "type": "string",
              "title": "<p>aws</p>"
            },
            "status": {
              "title": "<p>complete</p>",
              "type": "string",
              "enum": ["UNSET", "RUNNING", "DONE", "CANCELLED", "FAILED"],
              "default": "UNSET"
            },
            "created_at": {
              "type": "string",
              "format": "date-time"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time"
            },
            "labels": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "title": "<p>unstructured metadata</p>"
            }
          }
        }
      }
    },
    "hashicorp.cloud.packer.UpdateChannelRequest": {
      "type": "object",
      "properties": {
        "slug": {
          "type": "string",
          "title": "<p>production-stable</p>"
        },
        "bucket_slug": {
          "type": "string",
          "title": "<p>same as in Bucket</p>"
        },
        "incremental_version": {
          "type": "integer",
          "format": "int32"
        },
        "iteration_id": {
          "type": "string"
        },
        "fingerprint": {
          "type": "string"
        },
        "ratify": {
          "type": "boolean",
          "title": "<p>Ratifies a revoked channel prior to the update</p>"
        },
        "location": {
          "type": "object",
          "properties": {
            "organization_id": {
              "type": "string",
              "description": "<p>organization_id is the id of the organization.</p>"
            },
            "project_id": {
              "type": "string",
              "description": "<p>project_id is the projects id.</p>"
            },
            "region": {
              "description": "<p>region is the region that the resource is located in. It is\noptional if the object being referenced is a global object.</p>",
              "type": "object",
              "properties": {
                "provider": {
                  "type": "string",
                  "title": "<p>provider is the named cloud provider (\"aws\", \"gcp\", \"azure\")</p>"
                },
                "region": {
                  "type": "string",
                  "title": "<p>region is the cloud region (\"us-west1\", \"us-east1\")</p>"
                }
              }
            }
          }
        }
      }
    },
    "hashicorp.cloud.packer.UpdateChannelResponse": {
      "type": "object",
      "properties": {
        "channel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "title": "<p>ULID of this chanel</p>"
            },
            "slug": {
              "type": "string",
              "title": "<p>Something like \"production-stable\"</p>"
            },
            "bucket_slug": {
              "type": "string",
              "title": "<p>image bucket this belongs to</p>"
            },
            "author_id": {
              "type": "string",
              "title": "<p>The author who created the channel</p>"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "title": "<p>timestamp this channel was created at</p>"
            },
            "revoked_at": {
              "type": "string",
              "format": "date-time",
              "title": "<p>timestamp this channel was revoked at</p>"
            },
            "revocation_message": {
              "type": "string",
              "title": "<p>message with the reason of why this channel was revoked</p>"
            },
            "pointer": {
              "title": "<p>The channel pointer to the iteration</p>",
              "type": "object",
              "properties": {
                "iteration": {
                  "title": "<p>The iteration the channel is pointing to</p>",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "<p>ULID</p>"
                    },
                    "bucket_slug": {
                      "type": "string",
                      "title": "<p>same bucket_slug as in the Bucket object</p>"
                    },
                    "iteration_ancestor_id": {
                      "type": "string",
                      "title": "<p>what image was used as source</p>"
                    },
                    "incremental_version": {
                      "type": "integer",
                      "format": "int32",
                      "title": "<p>e.g 15</p>"
                    },
                    "complete": {
                      "type": "boolean",
                      "description": "<p>If true, this iteration is considered \"ready to use\" and will be\nreturned even if the include_incomplete flage is \"false\" in the\nlist iterations request.</p>"
                    },
                    "author_id": {
                      "type": "string",
                      "title": "<p>who created the iteration</p>"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "<p>when iteration was created or updated</p>"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "fingerprint": {
                      "type": "string",
                      "description": "<p>fingerprint of the build; this will allow to regroup image builds under\nthe same iteration. So it could be for example a git sha.</p>"
                    },
                    "builds": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "<p>ULID</p>"
                          },
                          "iteration_id": {
                            "type": "string",
                            "title": "<p>ULID of the iteration</p>"
                          },
                          "component_type": {
                            "type": "string",
                            "title": "<p>builder or post-processor used to build this</p>"
                          },
                          "packer_run_uuid": {
                            "type": "string"
                          },
                          "images": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "title": "<p>ULID for the image</p>"
                                },
                                "image_id": {
                                  "type": "string",
                                  "description": "<p>ID or URL of the remote cloud image as given by a build.</p>"
                                },
                                "region": {
                                  "type": "string",
                                  "title": "<p>region as given by <code>packer build</code>. eg. \"ap-east-1\"</p>"
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "title": "<p>Timestamp at which this image was created</p>"
                                }
                              },
                              "description": "Represents the actual region:image_id mapping for a single image, in a\nsingle build."
                            }
                          },
                          "cloud_provider": {
                            "type": "string",
                            "title": "<p>aws</p>"
                          },
                          "status": {
                            "title": "<p>complete</p>",
                            "type": "string",
                            "enum": [
                              "UNSET",
                              "RUNNING",
                              "DONE",
                              "CANCELLED",
                              "FAILED"
                            ],
                            "default": "UNSET"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "labels": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "title": "<p>unstructured metadata</p>"
                          }
                        }
                      },
                      "title": "<p>link to set of builds for an image iteration</p>"
                    }
                  }
                },
                "author_id": {
                  "type": "string",
                  "title": "<p>The author who pointed the channel to the iteration</p>"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "<p>timestamp this channel pointer was created at</p>"
                }
              }
            }
          }
        }
      }
    },
    "hashicorp.cloud.packer.UpdateIterationRequest": {
      "type": "object",
      "properties": {
        "location": {
          "type": "object",
          "properties": {
            "organization_id": {
              "type": "string",
              "description": "<p>organization_id is the id of the organization.</p>"
            },
            "project_id": {
              "type": "string",
              "description": "<p>project_id is the projects id.</p>"
            },
            "region": {
              "description": "<p>region is the region that the resource is located in. It is\noptional if the object being referenced is a global object.</p>",
              "type": "object",
              "properties": {
                "provider": {
                  "type": "string",
                  "title": "<p>provider is the named cloud provider (\"aws\", \"gcp\", \"azure\")</p>"
                },
                "region": {
                  "type": "string",
                  "title": "<p>region is the cloud region (\"us-west1\", \"us-east1\")</p>"
                }
              }
            }
          }
        },
        "bucket_slug": {
          "type": "string"
        },
        "iteration_id": {
          "type": "string"
        },
        "complete": {
          "type": "boolean"
        }
      }
    },
    "hashicorp.cloud.packer.UpdateIterationResponse": {
      "type": "object",
      "properties": {
        "iteration": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "title": "<p>ULID</p>"
            },
            "bucket_slug": {
              "type": "string",
              "title": "<p>same bucket_slug as in the Bucket object</p>"
            },
            "iteration_ancestor_id": {
              "type": "string",
              "title": "<p>what image was used as source</p>"
            },
            "incremental_version": {
              "type": "integer",
              "format": "int32",
              "title": "<p>e.g 15</p>"
            },
            "complete": {
              "type": "boolean",
              "description": "<p>If true, this iteration is considered \"ready to use\" and will be\nreturned even if the include_incomplete flage is \"false\" in the\nlist iterations request.</p>"
            },
            "author_id": {
              "type": "string",
              "title": "<p>who created the iteration</p>"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "title": "<p>when iteration was created or updated</p>"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time"
            },
            "fingerprint": {
              "type": "string",
              "description": "<p>fingerprint of the build; this will allow to regroup image builds under\nthe same iteration. So it could be for example a git sha.</p>"
            },
            "builds": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "title": "<p>ULID</p>"
                  },
                  "iteration_id": {
                    "type": "string",
                    "title": "<p>ULID of the iteration</p>"
                  },
                  "component_type": {
                    "type": "string",
                    "title": "<p>builder or post-processor used to build this</p>"
                  },
                  "packer_run_uuid": {
                    "type": "string"
                  },
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "title": "<p>ULID for the image</p>"
                        },
                        "image_id": {
                          "type": "string",
                          "description": "<p>ID or URL of the remote cloud image as given by a build.</p>"
                        },
                        "region": {
                          "type": "string",
                          "title": "<p>region as given by <code>packer build</code>. eg. \"ap-east-1\"</p>"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "<p>Timestamp at which this image was created</p>"
                        }
                      },
                      "description": "Represents the actual region:image_id mapping for a single image, in a\nsingle build."
                    }
                  },
                  "cloud_provider": {
                    "type": "string",
                    "title": "<p>aws</p>"
                  },
                  "status": {
                    "title": "<p>complete</p>",
                    "type": "string",
                    "enum": ["UNSET", "RUNNING", "DONE", "CANCELLED", "FAILED"],
                    "default": "UNSET"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "labels": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "title": "<p>unstructured metadata</p>"
                  }
                }
              },
              "title": "<p>link to set of builds for an image iteration</p>"
            }
          },
          "title": "image iterations messages"
        }
      }
    }
  },
  "securityDefinitions": {
    "bearer": {
      "type": "apiKey",
      "description": "Authentication token, prefixed by Bearer: Bearer <token>",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "bearer": []
    }
  ]
}
